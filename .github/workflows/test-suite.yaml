name: Test Suite

on:
  workflow_call:

env:
  DJANGO_SETTINGS_MODULE: "usaspending_api.settings"
  ES_SCHEME: http
  ES_HOST: localhost
  ES_PORT: 9200
  USASPENDING_DB_HOST: localhost
  USASPENDING_DB_PORT: 5432
  USASPENDING_DB_USER: usaspending
  USASPENDING_DB_PASSWORD: usaspender
  USASPENDING_DB_NAME: data_store_api  

jobs:
  Run-Pytest-Test-Suite:
    name: Run Pytest Test Suite
    runs-on: ${{ vars.RUNNER_VERSION }}
    steps:
      - name: Checkout source repository
        uses: actions/checkout@v4

      - name: Set combined ENV
        run: |
          echo "DATABASE_URL=postgres://$USASPENDING_DB_USER:$USASPENDING_DB_PASSWORD@$USASPENDING_DB_HOST:$USASPENDING_DB_PORT/$USASPENDING_DB_NAME" >> $GITHUB_ENV
          echo "DOWNLOAD_DATABASE_URL=$DATABASE_URL >> $GITHUB_ENV
          echo "ES_HOSTNAME=$ES_SCHEME://$ES_HOST:$ES_PORT" >> $GITHUB_ENV

      - name: Build docker containers
        run: |
          make docker-compose-up-usaspending args="-d usaspending-db usaspending-es"
          ttl=30; echo "Try DB conn from container for $ttl seconds"; until [ $ttl -le 0 ] || psql $DATABASE_URL -c 'select 1 where 1=1'; do echo $ttl; ((ttl--)); sleep 1; done; [ $ttl -gt 0 ]
          ttl=30; echo "Try ES conn from container for $ttl seconds"; until [ $ttl -le 0 ] || curl --silent -XGET --fail $ES_HOSTNAME; do echo $ttl; ((ttl--)); sleep 1; done; [ $ttl -gt 0 ]
      
      - name: Check docker container status
        run: docker ps -a

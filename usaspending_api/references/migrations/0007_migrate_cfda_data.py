# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-15 17:37
from __future__ import unicode_literals

from django.db import migrations


def forwards_func(apps, schema_editor):
    cfda_new = apps.get_model("references", "Cfda")
    cfda_old = apps.get_model("references", "CFDAProgram")
    subaward = apps.get_model("awards", "Subaward")
    transaction_assistance = apps.get_model("awards", "TransactionAssistance")
    for record in cfda_old.objects.all():
        new_record = cfda_new.objects.create(
            program_number=record.program_number,
            program_title=record.program_title,
            popular_name=record.popular_name,
            federal_agency=record.federal_agency,
            authorization=record.authorization,
            objectives=record.objectives,
            types_of_assistance=record.types_of_assistance,
            uses_and_use_restrictions=record.uses_and_use_restrictions,
            applicant_eligibility=record.applicant_eligibility,
            beneficiary_eligibility=record.beneficiary_eligibility,
            credentials_documentation=record.credentials_documentation,
            pre_application_coordination=record.pre_application_coordination,
            application_procedures=record.application_procedures,
            award_procedure=record.award_procedure,
            deadlines=record.deadlines,
            range_of_approval_disapproval_time=record.range_of_approval_disapproval_time,
            website_address=record.website_address,
            formula_and_matching_requirements=record.formula_and_matching_requirements,
            length_and_time_phasing_of_assistance=record.length_and_time_phasing_of_assistance,
            reports=record.reports,
            audits=record.audits,
            records=record.records,
            account_identification=record.account_identification,
            obligations=record.obligations,
            range_and_average_of_financial_assistance=record.range_and_average_of_financial_assistance,
            appeals=record.appeals,
            renewals=record.renewals,
            program_accomplishments=record.program_accomplishments,
            regulations_guidelines_and_literature=record.regulations_guidelines_and_literature,
            regional_or_local_office=record.regional_or_local_office,
            headquarters_office=record.headquarters_office,
            related_programs=record.related_programs,
            examples_of_funded_projects=record.examples_of_funded_projects,
            criteria_for_selecting_proposals=record.criteria_for_selecting_proposals,
            url=record.url,
            recovery=record.recovery,
            omb_agency_code=record.omb_agency_code,
            omb_bureau_code=record.omb_bureau_code,
            published_date=record.published_date,
            archived_date=record.archived_date,
            create_date=record.create_date,
            update_date=record.update_date
        )

        subaward.objects.filter(cfda_old=record).update(cfda_new=new_record)
        transaction_assistance.objects.filter(cfda_old=record).update(cfda_new=new_record)


def reverse_func(apps, schema_editor):
    cfda_new = apps.get_model("references", "Cfda")
    subaward = apps.get_model("awards", "Subaward")
    transaction_assistance = apps.get_model("awards", "TransactionAssistance")

    subaward.objects.filter(cfda_new__isnull=False).update(cfda_new=None)
    transaction_assistance.objects.filter(cfda_new__isnull=False).update(cfda_new=None)
    cfda_new.objects.all().delete()


class Migration(migrations.Migration):

    dependencies = [
        ('references', '0006_cfda'),
        ('awards', '0003_auto_20170515_1807')
    ]

    operations = [
        migrations.RunPython(forwards_func, reverse_func),
    ]

# Generated by Django 3.2.15 on 2023-02-17 05:52

from django.db import migrations


def check_data_load_limit(apps, _):
    TransactionSearch = apps.get_model("search", "TransactionSearch")
    if TransactionSearch.objects.count() > 1000000:
        raise RuntimeError(
            "Limiting data load in this migration to 1,000,000 records or less "
            "Manually load data into the partitions "
            "(temp.transaction_search_fpds and temp.transaction_search_fabs) external to this "
            "migation using a streamlined/bulk-load approach, then when successful, mark this migration "
            "as applied with: python3 manage.py migrate --fake search 0022"
        )


class Migration(migrations.Migration):

    dependencies = [
        ('search', '0021_partition_transaction_search_pt1_index_prep_and_tables'),
    ]

    operations = [
        migrations.RunPython(code=check_data_load_limit, reverse_code=migrations.RunPython.noop),
        migrations.RunSQL(
            sql="""
                INSERT INTO temp.transaction_search_fabs_temp
                SELECT * FROM rpt.transaction_search WHERE is_fpds = FALSE;
            """,
            reverse_sql="""
                DO
                $$
                BEGIN
                    TRUNCATE temp.transaction_search_fabs_temp;
                EXCEPTION
                    WHEN OTHERS THEN
                        NULL; -- ignore error
                END
                $$
                ;
            """
        ),
        migrations.RunSQL(
            sql="""
            INSERT INTO temp.transaction_search_fpds_temp
            SELECT * FROM rpt.transaction_search WHERE is_fpds = TRUE;
        """,
            reverse_sql="""
                DO
                $$
                BEGIN
                    TRUNCATE temp.transaction_search_fpds_temp;
                EXCEPTION
                    WHEN OTHERS THEN
                        NULL; -- ignore error
                END
                $$
                ;
            """
        ),
    ]

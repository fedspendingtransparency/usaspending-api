# Generated by Django 4.2.20 on 2025-04-18 20:30
# Edited to prevent duplicate indexes and control index name

from django.contrib.postgres.constraints import OpClass
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("search", "0054_add_columns_for_es_agg_keys"),
    ]

    operations = [
        migrations.AddField(
            model_name="awardsearch",
            name="generated_unique_award_id_legacy",
            field=models.TextField(
                help_text="Legacy generated unique award ID built using subtier awarding agency code",
                null=True,
                unique=False,
            ),
        ),
        # Using the default Index name generated by Django caused conflicts with the copy back logic
        # in the pipeline because the addition of "_temp" exceeded the 63-character limit on names.
        # The constraint below
        migrations.AddConstraint(
            model_name="awardsearch",
            constraint=models.UniqueConstraint(
                OpClass("generated_unique_award_id_legacy", name="text_pattern_ops"),
                name="as_idx_unique_award_id_legacy",
            ),
        ),
        # Set the legacy field to be unique without creating another Index
        migrations.RunSQL(
            sql="",
            state_operations=[
                migrations.AlterField(
                    model_name="awardsearch",
                    name="generated_unique_award_id_legacy",
                    field=models.TextField(
                        help_text="Legacy generated unique award ID built using subtier awarding agency code",
                        null=True,
                        unique=True,
                    ),
                )
            ],
        ),
    ]

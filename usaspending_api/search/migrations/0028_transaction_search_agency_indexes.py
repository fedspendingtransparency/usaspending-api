# Generated by Django 3.2.15 on 2023-02-28 22:26

from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('search', '0027_transaction_search_guaid_idx'),
    ]

    operations = [
        migrations.RunSQL(
            sql="""
                CREATE INDEX ts_idx_awarding_agency_id ON rpt.transaction_search(awarding_agency_id int4_ops);
                -- Must rename the auto-named inherited indexes on child partitions of this parent partitioned table, 
                -- so that they follow the naming convention of the parent, and copy_table_metadata command will 
                -- continue to work
                ALTER INDEX rpt.transaction_search_fabs_awarding_agency_id_idx RENAME TO ts_idx_awarding_agency_id_fabs;
                ALTER INDEX rpt.transaction_search_fpds_awarding_agency_id_idx RENAME TO ts_idx_awarding_agency_id_fpds;
                CREATE INDEX ts_idx_funding_agency_id ON rpt.transaction_search(funding_agency_id int4_ops);
                -- (Same comment as above)
                ALTER INDEX rpt.transaction_search_fabs_funding_agency_id_idx RENAME TO ts_idx_funding_agency_id_fabs;
                ALTER INDEX rpt.transaction_search_fpds_funding_agency_id_idx RENAME TO ts_idx_funding_agency_id_fpds;
            """,
            reverse_sql="""
                DROP INDEX ts_idx_funding_agency_id;
                DROP INDEX ts_idx_awarding_agency_id;
            """,
            state_operations=[
                migrations.AddIndex(
                    model_name='transactionsearch',
                    index=models.Index(fields=['awarding_agency_id'], name='ts_idx_awarding_agency_id'),
                ),
                migrations.AddIndex(
                    model_name='transactionsearch',
                    index=models.Index(fields=['funding_agency_id'], name='ts_idx_funding_agency_id'),
                ),
            ]
        )
    ]

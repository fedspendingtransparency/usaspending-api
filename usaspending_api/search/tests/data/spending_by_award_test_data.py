import pytest
from model_bakery import baker

from usaspending_api.references.models.ref_program_activity import RefProgramActivity
from usaspending_api.search.models import AwardSearch


@pytest.fixture
def spending_by_award_test_data():
    baker.make(
        "recipient.RecipientLookup",
        id=1001,
        recipient_hash="51c7c0ad-a793-de3f-72ba-be5c2895a9ca",
        legal_business_name="recipient_name_for_award_1001",
        duns="duns_1001",
    )
    baker.make(
        "recipient.RecipientLookup",
        id=1002,
        recipient_hash="0c324830-6283-38d3-d52e-00a71847d92d",
        legal_business_name="recipient_name_for_award_1002",
        duns="duns_1002",
    )
    baker.make(
        "recipient.RecipientLookup",
        id=1003,
        recipient_hash="41874914-2c27-813b-1505-df94f35b42dc",
        legal_business_name="recipient_name_for_award_1003",
        duns="duns_1003",
    )

    baker.make(
        "recipient.RecipientProfile",
        id=2001,
        recipient_hash="51c7c0ad-a793-de3f-72ba-be5c2895a9ca",
        recipient_level="R",
        recipient_name="recipient_name_1001",
        recipient_unique_id="duns_1001",
    )
    baker.make(
        "recipient.RecipientProfile",
        id=2002,
        recipient_hash="0c324830-6283-38d3-d52e-00a71847d92d",
        recipient_level="R",
        recipient_name="recipient_name_1002",
        recipient_unique_id="duns_1002",
    )
    baker.make(
        "recipient.RecipientProfile",
        id=2003,
        recipient_hash="41874914-2c27-813b-1505-df94f35b42dc",
        recipient_level="R",
        recipient_name="recipient_name_1003",
        recipient_unique_id="duns_1003",
    )

    award_1 = baker.make(
        "search.AwardSearch",
        award_id=1,
        type="A",
        category="contract",
        piid="abc111",
        display_award_id="abc111",
        earliest_transaction_id=1,
        latest_transaction_id=2,
        generated_unique_award_id="CONT_AWD_TESTING_1",
        date_signed="2008-01-01",
        description="the test test test",
        naics_description="the test test test",
        awarding_agency_id=1,
        awarding_toptier_agency_code="ABC",
        awarding_toptier_agency_name="TOPTIER AGENCY 1",
        funding_agency_id=1,
        funding_toptier_agency_code="ABC",
        funding_toptier_agency_name="TOPTIER AGENCY 1",
        total_obligation=999999.00,
        award_amount=999999.00,
        action_date="2020-10-01",
        is_fpds=True,
        business_categories=["business_category_1_3"],
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
        recipient_location_state_code="VA",
        recipient_location_country_code="USA",
        recipient_location_country_name="UNITED STATES",
        recipient_location_county_code="013",
        recipient_location_city_name="ARLINGTON",
        recipient_location_county_name="ARLINGTON",
        recipient_location_congressional_code="08",
        recipient_location_zip5="55455",
        recipient_location_zip4="9040",
        recipient_location_address_line1="1 Memorial Drive",
        recipient_location_address_line2="Room 324",
        recipient_location_address_line3="Desk 5",
        recipient_location_foreign_postal_code="55455",
        recipient_location_foreign_province="Manitoba",
        pop_country_name="UNITED STATES",
        pop_county_name="ARLINGTON",
        pop_congressional_code="08",
        pop_zip5="55455",
        pop_zip4="9040",
        naics_code="112233",
        product_or_service_code="PSC1",
        product_or_service_description="the test test test",
        type_of_contract_pricing="contract_pricing_test",
        type_set_aside="type_set_aside_test",
        extent_competed="extent_competed_test",
        recipient_uei="testuei",
        parent_uei="test_parent_uei",
        disaster_emergency_fund_codes=["L"],
        total_covid_obligation=100,
        total_covid_outlay=100,
        covid_spending_by_defc=[{"defc": "L", "outlay": 100, "obligation": 100}],
        tas_paths=["aid=097main=4930"],
        tas_components=["aid=097main=4930ata=sub=bpoa=epoa=a="],
    )
    award_2 = baker.make(
        "search.AwardSearch",
        award_id=2,
        type="A",
        category="contract",
        piid="abc222",
        display_award_id="abc222",
        earliest_transaction_id=3,
        latest_transaction_id=3,
        generated_unique_award_id="CONT_AWD_TESTING_2",
        date_signed="2009-01-01",
        total_obligation=9016.00,
        award_amount=9016.00,
        action_date="2020-10-01",
        is_fpds=True,
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="012",
        recipient_location_state_code="VA",
        recipient_location_country_code="USA",
        recipient_location_county_code="012",
        naics_code="112244",
        description="the description for a test",
        naics_description="the description for a test",
    )
    award_3 = baker.make(
        "search.AwardSearch",
        award_id=3,
        type="A",
        category="contract",
        piid="abc333",
        display_award_id="abc333",
        earliest_transaction_id=4,
        latest_transaction_id=6,
        generated_unique_award_id="CONT_AWD_TESTING_3",
        date_signed="2010-01-01",
        total_obligation=500000001.00,
        award_amount=500000001.00,
        action_date="2019-01-01",
        is_fpds=True,
        business_categories=["business_category_2_8"],
    )
    award_4 = baker.make(
        "search.AwardSearch",
        award_id=4,
        type="02",
        category="grant",
        fain="abc444",
        display_award_id="abc444",
        earliest_transaction_id=7,
        latest_transaction_id=7,
        generated_unique_award_id="ASST_NON_TESTING_4",
        date_signed="2019-01-01",
        total_obligation=12.00,
        award_amount=12.00,
        action_date="2019-10-1",
        is_fpds=False,
        cfda_number="10.331",
        cfdas=['{"cfda_number":"10.331"}'],
        recipient_unique_id="duns_1001",
        recipient_name="recipient_name_for_award_1001",
        recipient_hash="51c7c0ad-a793-de3f-72ba-be5c2895a9ca",
        recipient_levels=["R"],
    )
    award_5 = baker.make(
        "search.AwardSearch",
        award_id=5,
        type="A",
        category="contract",
        piid="abcdef123",
        display_award_id="abcdef123",
        earliest_transaction_id=8,
        latest_transaction_id=8,
        generated_unique_award_id="CONT_AWD_TESTING_5",
        date_signed="2019-01-01",
        total_obligation=120,
        award_amount=120,
        action_date="2019-10-1",
        is_fpds=True,
        tas_paths=["aid=097main=4930"],
        tas_components=["aid=097main=4930ata=sub=bpoa=epoa=a="],
        disaster_emergency_fund_codes=["Q"],
        total_covid_outlay=0,
        total_covid_obligation=0,
        covid_spending_by_defc=[{"defc": "Q", "outlay": 0, "obligation": 0}],
    )

    # Awards only used for testing their `recipient_name` values
    baker.make(
        "search.AwardSearch",
        award_id=997,
        type="A",
        category="contract",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain997",
        display_award_id="award997",
        generated_unique_award_id="ASST_NON_TESTING_997",
        recipient_name="ACME INC",
    )
    baker.make(
        "search.AwardSearch",
        award_id=998,
        type="A",
        category="contract",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain998",
        display_award_id="award998",
        generated_unique_award_id="ASST_NON_TESTING_998",
        recipient_name="ACME INC.",
    )
    baker.make(
        "search.AwardSearch",
        award_id=999,
        type="A",
        category="contract",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain999",
        display_award_id="award999",
        generated_unique_award_id="ASST_NON_TESTING_999",
        recipient_name="ACME INC.XYZ",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5145,
        type="08",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5145",
        display_award_id="award5145",
        generated_unique_award_id="ASST_NON_TESTING_5145",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
        recipient_location_state_code="VA",
        recipient_location_country_code="USA",
        recipient_location_country_name="UNITED STATES",
        recipient_location_county_code="013",
        recipient_location_city_name="ARLINGTON",
        recipient_location_county_name="ARLINGTON",
        recipient_location_congressional_code="08",
        recipient_location_zip5="55455",
        recipient_location_zip4="9040",
        recipient_location_address_line1="1 Memorial Drive",
        recipient_location_address_line2="Room 324",
        recipient_location_address_line3="Desk 5",
        recipient_location_foreign_postal_code="55455",
        recipient_location_foreign_province="Manitoba",
        pop_country_name="UNITED STATES",
        pop_county_name="ARLINGTON",
        pop_congressional_code="08",
        pop_zip5="55455",
        pop_zip4="9040",
        cfda_number="64.114",
        cfda_program_title="VETERANS HOUSING GUARANTEED AND INSURED LOANS",
        cfdas=['{"cfda_number": "64.114", "cfda_program_title": "VETERANS HOUSING GUARANTEED AND INSURED LOANS"}'],
    )

    baker.make(
        "search.AwardSearch",
        award_id=5146,
        type="08",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5146",
        display_award_id="award5146",
        generated_unique_award_id="ASST_NON_TESTING_5146",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
        recipient_location_state_code="NE",
        recipient_location_country_code="USA",
        recipient_location_country_name="UNITED STATES",
        recipient_location_county_code="013",
        recipient_location_city_name="OMAHA",
        recipient_location_county_name="OMAHA",
        recipient_location_congressional_code="08",
        recipient_location_zip5="55455",
        recipient_location_zip4="9040",
        recipient_location_address_line1="1 Memorial Drive",
        recipient_location_address_line2="Room 324",
        recipient_location_address_line3="Desk 5",
        recipient_location_foreign_postal_code="55455",
        recipient_location_foreign_province="Manitoba",
        pop_country_name="UNITED STATES",
        pop_county_name="ARLINGTON",
        pop_congressional_code="08",
        pop_zip5="55455",
        pop_zip4="9040",
        cfda_number="64.114",
        cfda_program_title="VETERANS HOUSING GUARANTEED AND INSURED LOANS",
        cfdas=['{"cfda_number": "64.114", "cfda_program_title": "VETERANS HOUSING GUARANTEED AND INSURED LOANS"}'],
    )

    baker.make(
        "search.AwardSearch",
        award_id=5147,
        type="08",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5147",
        display_award_id="award5147",
        generated_unique_award_id="ASST_NON_TESTING_5147",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
        recipient_location_state_code="MO",
        recipient_location_country_code="USA",
        recipient_location_country_name="UNITED STATES",
        recipient_location_county_code="013",
        recipient_location_city_name="KANSAS CITY",
        recipient_location_county_name="KANSAS CITY",
        recipient_location_congressional_code="08",
        recipient_location_zip5="55455",
        recipient_location_zip4="9040",
        recipient_location_address_line1="1 Memorial Drive",
        recipient_location_address_line2="Room 324",
        recipient_location_address_line3="Desk 5",
        recipient_location_foreign_postal_code="55455",
        recipient_location_foreign_province="Manitoba",
        pop_country_name="UNITED STATES",
        pop_county_name="ARLINGTON",
        pop_congressional_code="08",
        pop_zip5="55455",
        pop_zip4="9040",
        cfda_number="64.114",
        cfda_program_title="VETERANS HOUSING GUARANTEED AND INSURED LOANS",
        cfdas=['{"cfda_number": "64.114", "cfda_program_title": "VETERANS HOUSING GUARANTEED AND INSURED LOANS"}'],
    )

    baker.make(
        "search.AwardSearch",
        award_id=5150,
        type="08",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5150",
        display_award_id="award5150",
        generated_unique_award_id="ASST_NON_TESTING_5150",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
        recipient_location_country_code="ITA",
        recipient_location_country_name="Italy",
        recipient_location_county_code="013",
        recipient_location_congressional_code="08",
        recipient_location_zip5="55455",
        recipient_location_zip4="9040",
        recipient_location_address_line1="1 Memorial Drive",
        recipient_location_address_line2="Room 324",
        recipient_location_address_line3="Desk 5",
        recipient_location_foreign_postal_code="55455",
        recipient_location_foreign_province="Manitoba",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5152,
        type="08",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5152",
        display_award_id="award5152",
        generated_unique_award_id="ASST_NON_TESTING_5152",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
        recipient_location_country_code="BAH",
        recipient_location_country_name="Bahamas",
        recipient_location_county_code="013",
        recipient_location_congressional_code="08",
        recipient_location_zip5="55455",
        recipient_location_zip4="9040",
        recipient_location_address_line1="1 Memorial Drive",
        recipient_location_address_line2="Room 324",
        recipient_location_address_line3="Desk 5",
        recipient_location_foreign_postal_code="55455",
        recipient_location_foreign_province="Manitoba",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5153,
        type="09",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5153",
        display_award_id="award5153",
        generated_unique_award_id="ASST_NON_TESTING_5153",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5154,
        type="09",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5154",
        display_award_id="award5154",
        generated_unique_award_id="ASST_NON_TESTING_5154",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="Z CITY",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5155,
        type="09",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5155",
        display_award_id="award5155",
        generated_unique_award_id="ASST_NON_TESTING_5155",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5156,
        type="09",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5156",
        display_award_id="award5156",
        generated_unique_award_id="ASST_NON_TESTING_5156",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="IL",
        pop_country_code="USA",
        pop_county_code="013",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5157,
        type="09",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5157",
        display_award_id="award5157",
        generated_unique_award_id="ASST_NON_TESTING_5157",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_country_code="USA",
        pop_country_name="UNITED STATES",
        pop_county_code="013",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5158,
        type="09",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5158",
        display_award_id="award5158",
        generated_unique_award_id="ASST_NON_TESTING_5158",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_country_code="BAH",
        pop_country_name="BAHAMAS",
        pop_county_code="013",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5159,
        type="03",
        category="contract",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5159",
        display_award_id="award5159",
        generated_unique_award_id="ASST_NON_TESTING_5159",
        recipient_name="ACME INC",
        cfda_number="12",
        cfda_program_title="program1",
        cfdas=['{"cfda_number": "12", "cfda_program_title": "program1"}'],
    )

    baker.make(
        "search.AwardSearch",
        award_id=5160,
        type="03",
        category="contract",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5160",
        display_award_id="award5160",
        generated_unique_award_id="ASST_NON_TESTING_5160",
        recipient_name="ACME INC",
        cfda_number="12",
        cfda_program_title="program2",
        cfdas=['{"cfda_number": "12", "cfda_program_title": "program2"}'],
    )

    baker.make(
        "search.AwardSearch",
        award_id=5161,
        type="03",
        category="contract",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5161",
        display_award_id="award5161",
        generated_unique_award_id="ASST_NON_TESTING_5161",
        recipient_name="ACME INC",
        cfda_number="13",
        cfda_program_title="program1",
        cfdas=['{"cfda_number": "13", "cfda_program_title": "program1"}'],
    )

    baker.make(
        "search.AwardSearch",
        award_id=5148,
        type="08",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5148",
        display_award_id="award5148",
        generated_unique_award_id="ASST_NON_TESTING_5148",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
        recipient_location_state_code="MO",
        recipient_location_country_code="USA",
        recipient_location_country_name="UNITED STATES",
        recipient_location_county_code="013",
        recipient_location_city_name="KANSAS CITY",
        recipient_location_county_name="KANSAS CITY",
        recipient_location_congressional_code="08",
        recipient_location_zip5="55455",
        recipient_location_zip4="9040",
        recipient_location_address_line1="7 Memorial Drive",
        recipient_location_address_line2="Room 324",
        recipient_location_address_line3="Desk 5",
        recipient_location_foreign_postal_code="55455",
        recipient_location_foreign_province="Manitoba",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5149,
        type="08",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5149",
        display_award_id="award5149",
        generated_unique_award_id="ASST_NON_TESTING_5149",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
        recipient_location_state_code="IL",
        recipient_location_country_code="USA",
        recipient_location_country_name="UNITED STATES",
        recipient_location_congressional_code="08",
        recipient_location_zip5="55455",
        recipient_location_zip4="9040",
        recipient_location_address_line1="1 Memorial Drive",
        recipient_location_address_line2="Room 324",
        recipient_location_address_line3="Desk 5",
        recipient_location_foreign_postal_code="55455",
        recipient_location_foreign_province="Manitoba",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5151,
        type="08",
        category="loan",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5151",
        display_award_id="award5151",
        generated_unique_award_id="ASST_NON_TESTING_5151",
        recipient_name="ACME INC.XYZ",
        recipient_uei="acmeuei",
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
        recipient_location_state_code="CO",
        recipient_location_country_code="USA",
        recipient_location_country_name="UNITED STATES",
        recipient_location_county_code="013",
        recipient_location_congressional_code="08",
        recipient_location_zip5="55455",
        recipient_location_zip4="9040",
        recipient_location_address_line1="1 Memorial Drive",
        recipient_location_address_line2="Room 324",
        recipient_location_address_line3="Desk 5",
        recipient_location_foreign_postal_code="55455",
        recipient_location_foreign_province="Manitoba",
        pop_country_name="UNITED STATES",
        pop_county_name="ARLINGTON",
        pop_congressional_code="08",
        pop_zip5="55455",
        pop_zip4="9040",
        cfda_number="64.114",
        cfda_program_title="VETERANS HOUSING GUARANTEED AND INSURED LOANS",
        cfdas=['{"cfda_number": "64.114", "cfda_program_title": "VETERANS HOUSING GUARANTEED AND INSURED LOANS"}'],
    )

    baker.make(
        "search.AwardSearch",
        award_id=5453,
        type="B",
        category="contract",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5453",
        display_award_id="award5453",
        generated_unique_award_id="ASST_NON_TESTING_5453",
        recipient_name="ACME INC.",
        naics_code="123457",
        naics_description="naics description 1",
        product_or_service_code="PSC2",
        product_or_service_description="PSC description 1",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5451,
        type="B",
        category="contract",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5451",
        display_award_id="award5451",
        generated_unique_award_id="ASST_NON_TESTING_5451",
        recipient_name="ACME INC.",
        naics_code="123456",
        naics_description="2",
        product_or_service_code="PSC1",
        product_or_service_description="PSC description 2",
    )

    baker.make(
        "search.AwardSearch",
        award_id=5452,
        type="B",
        category="contract",
        date_signed="2019-01-01",
        action_date="2019-01-01",
        fain="fain5452",
        display_award_id="award5452",
        generated_unique_award_id="ASST_NON_TESTING_5452",
        recipient_name="ACME INC.",
        naics_code="123456",
        naics_description="1",
        product_or_service_code="PSC1",
        product_or_service_description="PSC description 1",
    )

    # Toptier Agency
    ta1 = baker.make(
        "references.ToptierAgency", abbreviation="TA1", name="TOPTIER AGENCY 1", toptier_code="ABC", _fill_optional=True
    )

    # Federal Account
    baker.make(
        "accounts.FederalAccount", id=1, parent_toptier_agency=ta1, agency_identifier="1", main_account_code="0001"
    )

    # TAS
    baker.make(
        "accounts.TreasuryAppropriationAccount",
        treasury_account_identifier=1,
        agency_id="097",
        main_account_code="4930",
        federal_account_id=1,
    )

    # DEFC
    defc_l = baker.make(
        "references.DisasterEmergencyFundCode",
        code="L",
        group_name="covid_19",
        earliest_public_law_enactment_date="2020-03-06",
    )
    defc_q = baker.make(
        "references.DisasterEmergencyFundCode", code="Q", group_name=None, earliest_public_law_enactment_date=None
    )

    # Submissions
    baker.make(
        "submissions.DABSSubmissionWindowSchedule",
        id="2022080",
        is_quarter=False,
        period_start_date="2022-05-01",
        period_end_date="2022-05-30",
        submission_fiscal_year=2022,
        submission_fiscal_quarter=3,
        submission_fiscal_month=8,
        submission_reveal_date="2020-5-15",
    )
    # Unclosed submission window
    baker.make(
        "submissions.DABSSubmissionWindowSchedule",
        id="9999070",
        is_quarter=True,
        period_start_date="9999-04-01",
        period_end_date="9999-04-30",
        submission_fiscal_year=9999,
        submission_fiscal_quarter=3,
        submission_fiscal_month=7,
        submission_reveal_date="9999-4-15",
    )
    sa1 = baker.make(
        "submissions.SubmissionAttributes",
        reporting_fiscal_year=2022,
        reporting_fiscal_period=8,
        quarter_format_flag=False,
        reporting_period_start="2022-05-01",
        submission_window_id="2022080",
    )
    sa2 = baker.make(
        "submissions.SubmissionAttributes",
        pk=1,
        reporting_fiscal_period=8,
        reporting_fiscal_year=9999,
        reporting_period_end="9999-06-30",
        reporting_period_start="9999-04-02",
        submission_window_id="9999070",
    )

    baker.make(
        "awards.FinancialAccountsByAwards",
        award=award_1,
        treasury_account_id=1,
        transaction_obligated_amount=100,
        gross_outlay_amount_by_award_cpe=100,
        disaster_emergency_fund=defc_l,
        submission=sa1,
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        award=award_1,
        treasury_account_id=1,
        transaction_obligated_amount=99,
        gross_outlay_amount_by_award_cpe=99,
        disaster_emergency_fund=defc_l,
        submission=sa2,
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        award=award_2,
        transaction_obligated_amount=0,
        gross_outlay_amount_by_award_cpe=0,
        disaster_emergency_fund=defc_l,
        submission=sa2,
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        award=award_5,
        treasury_account_id=1,
        transaction_obligated_amount=0,
        gross_outlay_amount_by_award_cpe=0,
        disaster_emergency_fund=defc_q,
        submission=sa2,
    )

    # Subtier Agency
    subtier_agency_1 = {"pk": 1, "abbreviation": "SA1", "name": "SUBTIER AGENCY 1", "subtier_code": "DEF"}
    subtier_agency_2 = {"pk": 2, "abbreviation": "SA2", "name": "SUBTIER AGENCY 2", "subtier_code": "1000"}

    baker.make("references.SubtierAgency", **subtier_agency_1, _fill_optional=True)
    baker.make("references.SubtierAgency", **subtier_agency_2, _fill_optional=True)

    # Agency
    baker.make("references.Agency", pk=1, toptier_agency=ta1, subtier_agency_id=1, _fill_optional=True)

    baker.make("search.TransactionSearch", transaction_id=1, award=award_1, action_date="2020-04-01", is_fpds=True)
    baker.make(
        "search.TransactionSearch",
        transaction_id=2,
        award=award_1,
        action_date="2020-04-01",
        is_fpds=True,
        business_categories=["business_category_1_3"],
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="013",
        pop_city_name="ARLINGTON",
        recipient_location_state_code="VA",
        recipient_location_country_code="USA",
        recipient_location_county_code="013",
        recipient_location_city_name="ARLINGTON",
        naics_code="112233",
        product_or_service_code="PSC1",
        type_of_contract_pricing="contract_pricing_test",
        type_set_aside="type_set_aside_test",
        extent_competed="extent_competed_test",
        recipient_uei="testuei",
        parent_uei="test_parent_uei",
    )
    baker.make(
        "search.TransactionSearch",
        transaction_id=3,
        award=award_2,
        action_date="2016-01-01",
        is_fpds=True,
        pop_state_code="VA",
        pop_country_code="USA",
        pop_county_code="012",
        recipient_location_state_code="VA",
        recipient_location_country_code="USA",
        recipient_location_county_code="012",
        naics_code="112244",
    )
    baker.make("search.TransactionSearch", transaction_id=4, award=award_3, action_date="2017-01-01", is_fpds=True)
    baker.make("search.TransactionSearch", transaction_id=5, award=award_3, action_date="2018-01-01", is_fpds=True)
    baker.make(
        "search.TransactionSearch",
        transaction_id=6,
        award=award_3,
        action_date="2019-01-01",
        is_fpds=True,
        business_categories=["business_category_2_8"],
    )
    baker.make(
        "search.TransactionSearch",
        transaction_id=7,
        award=award_4,
        action_date="2019-10-1",
        is_fpds=False,
        cfda_number="10.331",
        recipient_unique_id="duns_1001",
    )
    baker.make("search.TransactionSearch", transaction_id=8, award=award_5, action_date="2019-10-1", is_fpds=True)

    baker.make(
        "search.SubawardSearch",
        broker_subaward_id=1,
        award=award_1,
        latest_transaction_id=1,
        subaward_number=11111,
        prime_award_type="A",
        prime_award_group="procurement",
        sub_action_date="2020-04-02",
        action_date="2020-04-02",
        subaward_amount=10000,
        awardee_or_recipient_legal="recipient_name_for_award_1001",
        sub_awardee_or_recipient_legal="RECIPIENT_NAME_FOR_AWARD_1001",
        awardee_or_recipient_uniqu="duns_1001",
        piid="PIID1001",
        awarding_toptier_agency_name="awarding toptier 8001",
        awarding_subtier_agency_name="awarding subtier 8001",
        product_or_service_code="PSC2",
        sub_awardee_or_recipient_uei="UEI_10010001",
        unique_award_key="CONT_AWD_TESTING_1",
        subaward_description="the test test test",
        product_or_service_description="the test test test",
        sub_legal_entity_state_code="VA",
        sub_legal_entity_country_code="USA",
        sub_legal_entity_country_name="UNITED STATES",
        sub_legal_entity_county_code="013",
        sub_legal_entity_city_name="ARLINGTON",
        sub_legal_entity_county_name="ARLINGTON",
        sub_legal_entity_congressional="08",
        sub_legal_entity_zip="554559040",
        sub_legal_entity_zip5="55455",
        sub_legal_entity_address_line1="1 Memorial Drive",
        sub_legal_entity_foreign_posta="55455",
        sub_place_of_perform_state_code="VA",
        sub_place_of_perform_country_co="USA",
        sub_place_of_perform_county_code="013",
        sub_place_of_perform_city_name="ARLINGTON",
        sub_place_of_perform_country_name="UNITED STATES",
        sub_place_of_perform_county_name="ARLINGTON",
        sub_place_of_perform_congressio="08",
        sub_place_of_performance_zip="554559040",
        awardee_or_recipient_uei="testuei",
        naics="112233",
        naics_description="the test test test",
        subaward_recipient_hash="EXAM-PLE-ID",
        subaward_recipient_level="P",
    )
    baker.make(
        "search.SubawardSearch",
        broker_subaward_id=2,
        award=award_1,
        latest_transaction_id=2,
        subaward_number=22222,
        prime_award_type="A",
        prime_award_group="procurement",
        sub_action_date="2020-04-02",
        subaward_amount=20000,
        awardee_or_recipient_legal="recipient_name_for_award_1001",
        sub_awardee_or_recipient_legal="RECIPIENT_NAME_FOR_AWARD_1001",
        awardee_or_recipient_uniqu="duns_1001",
        sub_awardee_or_recipient_uei="UEI_10010002",
        piid="PIID2001",
        awarding_toptier_agency_name="awarding toptier 8002",
        awarding_subtier_agency_name="awarding subtier 8002",
        product_or_service_code="PSC0",
        action_date="2020-04-02",
        unique_award_key="CONT_AWD_TESTING_1",
        subaward_description="the description for a test",
        product_or_service_description="the description for a test",
    )
    baker.make(
        "search.SubawardSearch",
        broker_subaward_id=3,
        award=award_2,
        latest_transaction_id=3,
        subaward_number=33333,
        prime_award_type="A",
        prime_award_group="procurement",
        sub_action_date="2016-01-01",
        subaward_amount=30000,
        awardee_or_recipient_legal="recipient_name_for_award_1002",
        sub_awardee_or_recipient_legal="RECIPIENT_NAME_FOR_AWARD_1002",
        awardee_or_recipient_uniqu="duns_1002",
        sub_awardee_or_recipient_uei="UEI_10010002",
        award_piid_fain="PIID3002",
        awarding_toptier_agency_name="awarding toptier 8003",
        awarding_subtier_agency_name="awarding subtier 8003",
        product_or_service_code="PSC0",
        action_date="2016-01-01",
        unique_award_key="CONT_AWD_TESTING_2",
        prime_award_recipient_id="0c324830-6283-38d3-d52e-00a71847d92d-R",
    )
    baker.make(
        "search.SubawardSearch",
        broker_subaward_id=4,
        award=award_3,
        subaward_number=44444,
        awardee_or_recipient_uniqu="duns_1003",
        sub_awardee_or_recipient_uei="UEI_10010003",
        product_or_service_code="PSC0",
        action_date="2016-01-01",
    )
    baker.make(
        "search.SubawardSearch",
        broker_subaward_id=6,
        award=award_3,
        latest_transaction_id=6,
        subaward_number=66666,
        prime_award_type="A",
        prime_award_group="procurement",
        sub_action_date="2019-01-01",
        action_date="2019-01-01",
        subaward_amount=60000,
        awardee_or_recipient_legal="recipient_name_for_award_1003",
        sub_awardee_or_recipient_legal="RECIPIENT_NAME_FOR_AWARD_1003",
        awardee_or_recipient_uniqu="duns_1003",
        sub_awardee_or_recipient_uei="UEI_10010003",
        award_piid_fain="PIID6003",
        awarding_toptier_agency_name="awarding toptier 8006",
        awarding_subtier_agency_name="awarding subtier 8006",
        product_or_service_code="PSC0",
        unique_award_key="CONT_AWD_TESTING_3",
        prime_award_recipient_id="41874914-2c27-813b-1505-df94f35b42dc-R",
    )
    baker.make(
        "search.SubawardSearch",
        broker_subaward_id=9,
        award=award_4,
        latest_transaction_id=6,
        subaward_number=99999,
        prime_award_type="07",
        prime_award_group="procurement",
        sub_action_date="2019-01-01",
        action_date="2019-01-01",
        subaward_amount=60000,
        awardee_or_recipient_legal="recipient_name_for_award_1003",
        sub_awardee_or_recipient_legal="RECIPIENT_NAME_FOR_AWARD_1003",
        awardee_or_recipient_uniqu="duns_1003",
        award_piid_fain="PIID6003",
        awarding_toptier_agency_name="awarding toptier 8006",
        awarding_subtier_agency_name="awarding subtier 8006",
        product_or_service_code="PSC0",
        program_activities=[{"name": "PROGRAM_ACTIVITY_123", "code": "0123"}],
        unique_award_key="ASST_NON_DECF0000058_8900",
    )

    baker.make(
        "search.SubawardSearch",
        broker_subaward_id=45509,
        award=award_1,
        latest_transaction_id=45509,
        subaward_number=45509,
        prime_award_type="08",
        sub_action_date="2020-04-02",
        action_date="2020-04-02",
        subaward_amount=10000,
        awardee_or_recipient_legal="recipient_name_for_award_1001",
        sub_awardee_or_recipient_legal="RECIPIENT_NAME_FOR_AWARD_1001",
        awardee_or_recipient_uniqu="duns_1001",
        piid="PIID1001",
        awarding_toptier_agency_name="awarding toptier 8001",
        awarding_subtier_agency_name="awarding subtier 8001",
        sub_awardee_or_recipient_uei="UEI_10010001",
        unique_award_key="CONT_AWD_TESTING_1",
        subaward_description="the test test test",
        sub_legal_entity_state_code="VA",
        sub_legal_entity_country_code="USA",
        sub_legal_entity_country_name="UNITED STATES",
        sub_legal_entity_county_code="013",
        sub_legal_entity_city_name="ARLINGTON",
        sub_legal_entity_county_name="ARLINGTON",
        sub_legal_entity_congressional="08",
        sub_legal_entity_zip="554559040",
        sub_legal_entity_zip5="55455",
        sub_legal_entity_address_line1="1 Memorial Drive",
        sub_legal_entity_foreign_posta="55455",
        sub_place_of_perform_state_code="VA",
        sub_place_of_perform_country_co="USA",
        sub_place_of_perform_county_code="013",
        sub_place_of_perform_city_name="ARLINGTON",
        sub_place_of_perform_country_name="UNITED STATES",
        sub_place_of_perform_county_name="ARLINGTON",
        sub_place_of_perform_congressio="08",
        sub_place_of_performance_zip="554559040",
        awardee_or_recipient_uei="testuei",
        sub_cfda_numbers="1.234",
        cfda_number="1.234",
        cfda_numbers="1.234",
        cfda_titles="test cfda",
        subaward_recipient_hash="EXAM-PLE-ID",
        subaward_recipient_level="P",
    )

    # Ref Program Activity
    ref_program_activity_1 = {"id": 1}
    baker.make("references.RefProgramActivity", **ref_program_activity_1)

    # Ref Object Class
    ref_object_class_1 = {"id": 1, "object_class": "111"}
    baker.make("references.ObjectClass", **ref_object_class_1)

    # Financial Accounts by Awards
    financial_accounts_by_awards_1 = {
        "award": AwardSearch.objects.get(award_id=1),
        "program_activity": RefProgramActivity.objects.get(pk=1),
    }
    baker.make("awards.FinancialAccountsByAwards", **financial_accounts_by_awards_1)

    # Ref Country Code
    baker.make("references.RefCountryCode", country_code="USA", country_name="UNITED STATES")

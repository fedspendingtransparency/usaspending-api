# -*- coding: utf-8 -*-
# Generated by Django 1.10.7 on 2017-05-03 15:46
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import usaspending_api.awards.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('references', '0001_initial'),
        ('accounts', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('submissions', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('type', models.TextField(db_index=True, help_text='\tThe mechanism used to distribute funding. The federal government can distribute funding in several forms. These award types include contracts, grants, loans, and direct payments.', null=True, verbose_name='Award Type')),
                ('type_description', models.TextField(blank=True, help_text='The plain text description of the type of the award', null=True, verbose_name='Award Type Description')),
                ('piid', models.TextField(blank=True, db_index=True, help_text='Procurement Instrument Identifier - A unique identifier assigned to a federal contract, purchase order, basic ordering agreement, basic agreement, and blanket purchase agreement. It is used to track the contract, and any modifications or transactions related to it. After October 2017, it is between 13 and 17 digits, both letters and numbers.', null=True)),
                ('fain', models.TextField(blank=True, db_index=True, help_text='An identification code assigned to each financial assistance award tracking purposes. The FAIN is tied to that award (and all future modifications to that award) throughout the awardâ€™s life. Each FAIN is assigned by an agency. Within an agency, FAIN are unique: each new award must be issued a new FAIN. FAIN stands for Federal Award Identification Number, though the digits are letters, not numbers.', null=True)),
                ('uri', models.TextField(blank=True, db_index=True, help_text='The uri of the award', null=True)),
                ('total_obligation', models.DecimalField(db_index=True, decimal_places=2, help_text='The amount of money the government is obligated to pay for the award', max_digits=15, null=True, verbose_name='Total Obligated')),
                ('total_outlay', models.DecimalField(db_index=True, decimal_places=2, help_text='The total amount of money paid out for this award', max_digits=15, null=True)),
                ('date_signed', models.DateField(db_index=True, help_text='The date the award was signed', null=True, verbose_name='Award Date')),
                ('description', models.TextField(help_text='A description of the award', null=True, verbose_name='Award Description')),
                ('period_of_performance_start_date', models.DateField(db_index=True, help_text='The start date for the period of performance', null=True, verbose_name='Start Date')),
                ('period_of_performance_current_end_date', models.DateField(db_index=True, help_text='The current, not original, period of performance end date', null=True, verbose_name='End Date')),
                ('potential_total_value_of_award', models.DecimalField(blank=True, db_index=True, decimal_places=2, help_text='The sum of the potential_value_of_award from associated transactions', max_digits=20, null=True, verbose_name='Potential Total Value of Award')),
                ('base_and_all_options_value', models.DecimalField(blank=True, db_index=True, decimal_places=2, help_text='The sum of the base_and_all_options_value from associated transactions', max_digits=20, null=True, verbose_name='Base and all Options Value')),
                ('last_modified_date', models.DateField(blank=True, help_text='The date this award was last modified', null=True)),
                ('certified_date', models.DateField(blank=True, help_text='The date this record was certified', null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, help_text='The date this record was created in the API', null=True)),
                ('update_date', models.DateTimeField(auto_now=True, help_text='The last time this record was updated in the API', null=True)),
                ('total_subaward_amount', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('subaward_count', models.IntegerField(default=0)),
                ('awarding_agency', models.ForeignKey(help_text='The awarding agency for the award', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='references.Agency')),
                ('funding_agency', models.ForeignKey(help_text='The funding agency for the award', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='references.Agency')),
            ],
            options={
                'db_table': 'awards',
            },
        ),
        migrations.CreateModel(
            name='FinancialAccountsByAwards',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('financial_accounts_by_awards_id', models.AutoField(primary_key=True, serialize=False)),
                ('piid', models.TextField(blank=True, null=True)),
                ('parent_award_id', models.TextField(blank=True, null=True)),
                ('fain', models.TextField(blank=True, null=True)),
                ('uri', models.TextField(blank=True, null=True)),
                ('award_type', models.TextField(blank=True, null=True)),
                ('ussgl480100_undelivered_orders_obligations_unpaid_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl480100_undelivered_orders_obligations_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl483100_undelivered_orders_oblig_transferred_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl488100_upward_adjust_pri_undeliv_order_oblig_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl490100_delivered_orders_obligations_unpaid_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl490100_delivered_orders_obligations_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl493100_delivered_orders_oblig_transferred_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl498100_upward_adjust_pri_deliv_orders_oblig_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl480200_undelivered_orders_oblig_prepaid_advanced_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl480200_undelivered_orders_oblig_prepaid_advanced_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl483200_undeliv_orders_oblig_transferred_prepaid_adv_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl488200_up_adjust_pri_undeliv_order_oblig_ppaid_adv_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl490200_delivered_orders_obligations_paid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl490800_authority_outlayed_not_yet_disbursed_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl490800_authority_outlayed_not_yet_disbursed_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl498200_upward_adjust_pri_deliv_orders_oblig_paid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('obligations_undelivered_orders_unpaid_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('obligations_delivered_orders_unpaid_total_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('obligations_delivered_orders_unpaid_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlays_undelivered_orders_prepaid_total_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlays_undelivered_orders_prepaid_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlays_delivered_orders_paid_total_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlay_amount_by_award_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlay_amount_by_award_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('obligations_incurred_total_by_award_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl487100_down_adj_pri_unpaid_undel_orders_oblig_recov_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl497100_down_adj_pri_unpaid_deliv_orders_oblig_recov_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('deobligations_recoveries_refunds_of_prior_year_by_award_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('obligations_undelivered_orders_unpaid_total_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlays_delivered_orders_paid_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('drv_award_id_field_type', models.TextField(blank=True, null=True)),
                ('drv_obligations_incurred_total_by_award', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('transaction_obligated_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('reporting_period_start', models.DateField(blank=True, null=True)),
                ('reporting_period_end', models.DateField(blank=True, null=True)),
                ('last_modified_date', models.DateField(blank=True, null=True)),
                ('certified_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('award', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='financial_set', to='awards.Award')),
                ('object_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.ObjectClass')),
                ('program_activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.RefProgramActivity')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submissions.SubmissionAttributes')),
                ('treasury_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.TreasuryAppropriationAccount')),
            ],
            options={
                'managed': True,
                'db_table': 'financial_accounts_by_awards',
            },
        ),
        migrations.CreateModel(
            name='HistoricalTransaction',
            fields=[
                ('id', models.IntegerField(auto_created=True, blank=True, db_index=True, verbose_name='ID')),
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('usaspending_unique_transaction_id', models.TextField(blank=True, help_text='If this record is legacy USASpending data, this is the unique transaction identifier from that system', null=True)),
                ('type', models.TextField(help_text='The type for this transaction. For example, A, B, C, D', null=True, verbose_name='Action Type')),
                ('type_description', models.TextField(blank=True, help_text='The plain text description of the transaction type', null=True, verbose_name='Action Type Description')),
                ('period_of_performance_start_date', models.DateField(help_text='The period of performance start date', null=True, verbose_name='Period of Performance Start Date')),
                ('period_of_performance_current_end_date', models.DateField(help_text='The current end date of the period of performance', null=True, verbose_name='Period of Performance Current End Date')),
                ('action_date', models.DateField(help_text='The date this transaction was actioned', verbose_name='Transaction Date')),
                ('action_type', models.TextField(blank=True, help_text='The type of transaction. For example, A, B, C, D', null=True)),
                ('action_type_description', models.TextField(blank=True, null=True)),
                ('federal_action_obligation', models.DecimalField(blank=True, db_index=True, decimal_places=2, help_text='The obligation of the federal government for this transaction', max_digits=20, null=True)),
                ('modification_number', models.TextField(blank=True, help_text='The modification number for this transaction', null=True, verbose_name='Modification Number')),
                ('description', models.TextField(help_text='The description of this transaction', null=True)),
                ('drv_award_transaction_usaspend', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_current_total_award_value_amount_adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_potential_total_award_value_amount_adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('last_modified_date', models.DateField(blank=True, help_text='The date this transaction was last modified', null=True)),
                ('certified_date', models.DateField(blank=True, help_text='The date this transaction was certified', null=True)),
                ('create_date', models.DateTimeField(blank=True, editable=False, help_text='The date this transaction was created in the API', null=True)),
                ('update_date', models.DateTimeField(blank=True, editable=False, help_text='The last time this transaction was updated in the API', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('award', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='awards.Award')),
                ('awarding_agency', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='references.Agency')),
                ('funding_agency', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='references.Agency')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('place_of_performance', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='references.Location')),
                ('recipient', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='references.LegalEntity')),
                ('submission', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='submissions.SubmissionAttributes')),
            ],
            options={
                'verbose_name': 'historical transaction',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
        ),
        migrations.CreateModel(
            name='HistoricalTransactionAssistance',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('fain', models.TextField(blank=True, null=True)),
                ('uri', models.TextField(blank=True, null=True)),
                ('cfda_number', models.TextField(blank=True, null=True, verbose_name='CFDA Number')),
                ('cfda_title', models.TextField(blank=True, null=True, verbose_name='CFDA Title')),
                ('business_funds_indicator', models.TextField()),
                ('business_funds_indicator_description', models.TextField(blank=True, null=True)),
                ('non_federal_funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('total_funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('face_value_loan_guarantee', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('original_loan_subsidy_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('record_type', models.IntegerField()),
                ('record_type_description', models.TextField(blank=True, null=True)),
                ('correction_late_delete_indicator', models.TextField(blank=True, null=True)),
                ('correction_late_delete_indicator_description', models.TextField(blank=True, null=True)),
                ('fiscal_year_and_quarter_correction', models.TextField(blank=True, null=True)),
                ('sai_number', models.TextField(blank=True, null=True, verbose_name='SAI Number')),
                ('drv_federal_funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_award_finance_assistance_type_label', models.TextField(blank=True, null=True)),
                ('reporting_period_start', models.DateField(blank=True, null=True)),
                ('reporting_period_end', models.DateField(blank=True, null=True)),
                ('last_modified_date', models.DateField(blank=True, null=True)),
                ('submitted_type', models.TextField(blank=True, null=True, verbose_name='Submitted Type')),
                ('certified_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('update_date', models.DateTimeField(blank=True, editable=False, null=True)),
                ('period_of_performance_start_date', models.DateField(blank=True, null=True)),
                ('period_of_performance_current_end_date', models.DateField(blank=True, null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('cfda', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='references.CFDAProgram')),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('submission', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='submissions.SubmissionAttributes')),
            ],
            options={
                'verbose_name': 'historical transaction assistance',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
        ),
        migrations.CreateModel(
            name='HistoricalTransactionContract',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('piid', models.TextField(blank=True, help_text='The PIID of this transaction')),
                ('parent_award_id', models.TextField(blank=True, help_text='The parent award id for this transaction. This is generally the piid of an IDV', null=True, verbose_name='Parent Award ID')),
                ('cost_or_pricing_data', models.TextField(blank=True, null=True)),
                ('cost_or_pricing_data_description', models.TextField(blank=True, null=True)),
                ('type_of_contract_pricing', models.TextField(blank=True, default='UN', help_text='The type of contract pricing data, as a code', null=True, verbose_name='Type of Contract Pricing')),
                ('type_of_contract_pricing_description', models.TextField(blank=True, help_text='A plain text description of the type of contract pricing data', null=True, verbose_name='Type of Contract Pricing Description')),
                ('naics', models.TextField(blank=True, help_text='Specified which industry the work for this transaction falls into. A 6-digit code', null=True, verbose_name='NAICS')),
                ('naics_description', models.TextField(blank=True, help_text='A plain text description of the NAICS code', null=True, verbose_name='NAICS Description')),
                ('period_of_performance_potential_end_date', models.DateField(help_text='The potential end date of the period of performance', max_length=10, null=True, verbose_name='Period of Performance Potential End Date')),
                ('ordering_period_end_date', models.CharField(blank=True, help_text='The end date for the ordering period', max_length=8, null=True)),
                ('current_total_value_award', models.DecimalField(blank=True, decimal_places=2, help_text='The current value of the award', max_digits=20, null=True)),
                ('base_exercised_options_val', models.DecimalField(blank=True, decimal_places=2, help_text='The current value of the award', max_digits=20, null=True)),
                ('potential_total_value_of_award', models.DecimalField(blank=True, decimal_places=2, help_text='The potential total value of the award', max_digits=20, null=True, verbose_name='Potential Total Value of Award')),
                ('base_and_all_options_value', models.DecimalField(blank=True, db_index=True, decimal_places=2, help_text='The sum of the base_and_all_options_value from associated transactions', max_digits=20, null=True, verbose_name='Base and all Options Value')),
                ('referenced_idv_agency_identifier', models.TextField(blank=True, help_text='The agency identifier of the agency on the IDV', null=True)),
                ('idv_type', models.TextField(blank=True, help_text='The IDV type code', null=True, verbose_name='IDV Type')),
                ('idv_type_description', models.TextField(blank=True, null=True)),
                ('multiple_or_single_award_idv', models.TextField(blank=True, help_text='Specifies whether the IDV is a single more multiple award vehicle', null=True)),
                ('multiple_or_single_award_idv_description', models.TextField(blank=True, null=True)),
                ('type_of_idc', models.TextField(blank=True, help_text='Code representing the type of IDC', null=True, verbose_name='Type of IDC')),
                ('type_of_idc_description', models.TextField(blank=True, null=True)),
                ('a76_fair_act_action', models.TextField(blank=True, help_text='A-76 FAIR act action', null=True, verbose_name='A-76 FAIR Act Action')),
                ('dod_claimant_program_code', models.TextField(blank=True, null=True)),
                ('clinger_cohen_act_planning', models.TextField(blank=True, null=True)),
                ('commercial_item_acquisition_procedures', models.TextField(blank=True, null=True)),
                ('commercial_item_acquisition_procedures_description', models.TextField(blank=True, null=True)),
                ('commercial_item_test_program', models.TextField(blank=True, null=True)),
                ('consolidated_contract', models.TextField(blank=True, null=True)),
                ('contingency_humanitarian_or_peacekeeping_operation', models.TextField(blank=True, null=True)),
                ('contingency_humanitarian_or_peacekeeping_operation_description', models.TextField(blank=True, null=True)),
                ('contract_bundling', models.TextField(blank=True, null=True)),
                ('contract_bundling_description', models.TextField(blank=True, null=True)),
                ('contract_financing', models.TextField(blank=True, null=True)),
                ('contract_financing_description', models.TextField(blank=True, null=True)),
                ('contracting_officers_determination_of_business_size', models.TextField(blank=True, null=True)),
                ('cost_accounting_standards', models.TextField(blank=True, null=True)),
                ('cost_accounting_standards_description', models.TextField(blank=True, null=True)),
                ('country_of_product_or_service_origin', models.TextField(blank=True, null=True)),
                ('davis_bacon_act', models.TextField(blank=True, null=True)),
                ('davis_bacon_act_description', models.TextField(blank=True, null=True)),
                ('evaluated_preference', models.TextField(blank=True, null=True)),
                ('evaluated_preference_description', models.TextField(blank=True, null=True)),
                ('extent_competed', models.TextField(blank=True, null=True)),
                ('extent_competed_description', models.TextField(blank=True, null=True)),
                ('fed_biz_opps', models.TextField(blank=True, null=True)),
                ('fed_biz_opps_description', models.TextField(blank=True, null=True)),
                ('foreign_funding', models.TextField(blank=True, null=True)),
                ('foreign_funding_description', models.TextField(blank=True, null=True)),
                ('gfe_gfp', models.TextField(blank=True, null=True)),
                ('information_technology_commercial_item_category', models.TextField(blank=True, null=True)),
                ('information_technology_commercial_item_category_description', models.TextField(blank=True, null=True)),
                ('interagency_contracting_authority', models.TextField(blank=True, null=True)),
                ('interagency_contracting_authority_description', models.TextField(blank=True, null=True)),
                ('local_area_set_aside', models.TextField(blank=True, null=True)),
                ('major_program', models.TextField(blank=True, null=True)),
                ('purchase_card_as_payment_method', models.TextField(blank=True, null=True)),
                ('multi_year_contract', models.TextField(blank=True, null=True)),
                ('national_interest_action', models.TextField(blank=True, null=True)),
                ('national_interest_action_description', models.TextField(blank=True, null=True)),
                ('number_of_actions', models.TextField(blank=True, null=True)),
                ('number_of_offers_received', models.TextField(blank=True, null=True)),
                ('other_statutory_authority', models.TextField(blank=True, null=True)),
                ('performance_based_service_acquisition', models.TextField(blank=True, null=True)),
                ('performance_based_service_acquisition_description', models.TextField(blank=True, null=True)),
                ('place_of_manufacture', models.TextField(blank=True, null=True)),
                ('place_of_manufacture_description', models.TextField(blank=True, null=True)),
                ('price_evaluation_adjustment_preference_percent_difference', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('product_or_service_code', models.TextField(blank=True, null=True)),
                ('program_acronym', models.TextField(blank=True, null=True)),
                ('other_than_full_and_open_competition', models.TextField(blank=True, null=True)),
                ('recovered_materials_sustainability', models.TextField(blank=True, null=True)),
                ('recovered_materials_sustainability_description', models.TextField(blank=True, null=True)),
                ('research', models.TextField(blank=True, null=True)),
                ('research_description', models.TextField(blank=True, null=True)),
                ('sea_transportation', models.TextField(blank=True, null=True)),
                ('sea_transportation_description', models.TextField(blank=True, null=True)),
                ('service_contract_act', models.TextField(blank=True, null=True)),
                ('service_contract_act_description', models.TextField(blank=True, null=True)),
                ('small_business_competitiveness_demonstration_program', models.TextField(blank=True, null=True)),
                ('solicitation_identifier', models.TextField(blank=True, null=True, verbose_name='Solicitation ID')),
                ('solicitation_procedures', models.TextField(blank=True, null=True)),
                ('solicitation_procedures_description', models.TextField(blank=True, null=True)),
                ('fair_opportunity_limited_sources', models.TextField(blank=True, null=True)),
                ('fair_opportunity_limited_sources_description', models.TextField(blank=True, null=True)),
                ('subcontracting_plan', models.TextField(blank=True, null=True)),
                ('subcontracting_plan_description', models.TextField(blank=True, null=True)),
                ('program_system_or_equipment_code', models.TextField(blank=True, null=True)),
                ('type_set_aside', models.TextField(blank=True, null=True, verbose_name='Type Set Aside')),
                ('type_set_aside_description', models.TextField(blank=True, null=True)),
                ('epa_designated_product', models.TextField(blank=True, null=True)),
                ('epa_designated_product_description', models.TextField(blank=True, null=True)),
                ('walsh_healey_act', models.TextField(blank=True, help_text='Denotes whether this transaction is subject to the Walsh-Healey act', null=True)),
                ('transaction_number', models.TextField(blank=True, help_text='The transaction number for this transaction', null=True)),
                ('referenced_idv_modification_number', models.TextField(blank=True, help_text='The modification number for the referenced IDV', null=True)),
                ('rec_flag', models.TextField(blank=True, help_text='The rec flag', null=True)),
                ('drv_parent_award_awarding_agency_code', models.TextField(blank=True, null=True)),
                ('drv_current_aggregated_total_value_of_award', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_current_total_value_of_award', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_aggregated_base_exercised_options_value', models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)),
                ('drv_base_exercised_options_value', models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)),
                ('drv_potential_award_idv_amount_total_estimate', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_potential_aggregated_award_idv_amount_total_estimate', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_potential_aggregated_total_value_of_award', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_potential_total_value_of_award', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_aggregated_base_and_all_options_value', models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)),
                ('drv_base_and_all_options_value', models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)),
                ('create_date', models.DateTimeField(blank=True, editable=False, help_text='The date this record was created in the API', null=True)),
                ('update_date', models.DateTimeField(blank=True, editable=False, help_text='The last time this record was updated in the API', null=True)),
                ('last_modified_date', models.DateField(blank=True, help_text='The last time this transaction was modified', null=True)),
                ('certified_date', models.DateField(blank=True, help_text='The date this record was certified', null=True)),
                ('reporting_period_start', models.DateField(blank=True, help_text='The date marking the start of the reporting period', null=True)),
                ('reporting_period_end', models.DateField(blank=True, help_text='The date marking the end of the reporting period', null=True)),
                ('history_id', models.AutoField(primary_key=True, serialize=False)),
                ('history_date', models.DateTimeField()),
                ('history_type', models.CharField(choices=[('+', 'Created'), ('~', 'Changed'), ('-', 'Deleted')], max_length=1)),
                ('history_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='+', to=settings.AUTH_USER_MODEL)),
                ('submission', models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='submissions.SubmissionAttributes')),
            ],
            options={
                'verbose_name': 'historical transaction contract',
                'get_latest_by': 'history_date',
                'ordering': ('-history_date', '-history_id'),
            },
        ),
        migrations.CreateModel(
            name='Subaward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('subaward_number', models.TextField(db_index=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('recovery_model_question1', models.TextField(blank=True, null=True)),
                ('recovery_model_question2', models.TextField(blank=True, null=True)),
                ('action_date', models.DateField(blank=True, null=True)),
                ('award_report_fy_month', models.IntegerField()),
                ('award_report_fy_year', models.IntegerField()),
                ('naics', models.TextField(blank=True, help_text='Specified which industry the work for this transaction falls into. A 6-digit code', null=True, verbose_name='NAICS')),
                ('naics_description', models.TextField(blank=True, help_text='A plain text description of the NAICS code', null=True, verbose_name='NAICS Description')),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subawards', to='awards.Award')),
                ('awarding_agency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='awarding_subawards', to='references.Agency')),
                ('cfda', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.CFDAProgram')),
                ('funding_agency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='funding_subawards', to='references.Agency')),
                ('place_of_performance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.Location')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='references.LegalEntity')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submissions.SubmissionAttributes')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('usaspending_unique_transaction_id', models.TextField(blank=True, help_text='If this record is legacy USASpending data, this is the unique transaction identifier from that system', null=True)),
                ('type', models.TextField(help_text='The type for this transaction. For example, A, B, C, D', null=True, verbose_name='Action Type')),
                ('type_description', models.TextField(blank=True, help_text='The plain text description of the transaction type', null=True, verbose_name='Action Type Description')),
                ('period_of_performance_start_date', models.DateField(help_text='The period of performance start date', null=True, verbose_name='Period of Performance Start Date')),
                ('period_of_performance_current_end_date', models.DateField(help_text='The current end date of the period of performance', null=True, verbose_name='Period of Performance Current End Date')),
                ('action_date', models.DateField(help_text='The date this transaction was actioned', verbose_name='Transaction Date')),
                ('action_type', models.TextField(blank=True, help_text='The type of transaction. For example, A, B, C, D', null=True)),
                ('action_type_description', models.TextField(blank=True, null=True)),
                ('federal_action_obligation', models.DecimalField(blank=True, db_index=True, decimal_places=2, help_text='The obligation of the federal government for this transaction', max_digits=20, null=True)),
                ('modification_number', models.TextField(blank=True, help_text='The modification number for this transaction', null=True, verbose_name='Modification Number')),
                ('description', models.TextField(help_text='The description of this transaction', null=True)),
                ('drv_award_transaction_usaspend', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_current_total_award_value_amount_adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_potential_total_award_value_amount_adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('last_modified_date', models.DateField(blank=True, help_text='The date this transaction was last modified', null=True)),
                ('certified_date', models.DateField(blank=True, help_text='The date this transaction was certified', null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, help_text='The date this transaction was created in the API', null=True)),
                ('update_date', models.DateTimeField(auto_now=True, help_text='The last time this transaction was updated in the API', null=True)),
            ],
            options={
                'db_table': 'transaction',
            },
            bases=(models.Model, usaspending_api.awards.models.TransactionAgeComparisonMixin),
        ),
        migrations.CreateModel(
            name='TransactionAssistance',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='assistance_data', serialize=False, to='awards.Transaction')),
                ('fain', models.TextField(blank=True, null=True)),
                ('uri', models.TextField(blank=True, null=True)),
                ('cfda_number', models.TextField(blank=True, null=True, verbose_name='CFDA Number')),
                ('cfda_title', models.TextField(blank=True, null=True, verbose_name='CFDA Title')),
                ('business_funds_indicator', models.TextField()),
                ('business_funds_indicator_description', models.TextField(blank=True, null=True)),
                ('non_federal_funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('total_funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('face_value_loan_guarantee', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('original_loan_subsidy_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('record_type', models.IntegerField()),
                ('record_type_description', models.TextField(blank=True, null=True)),
                ('correction_late_delete_indicator', models.TextField(blank=True, null=True)),
                ('correction_late_delete_indicator_description', models.TextField(blank=True, null=True)),
                ('fiscal_year_and_quarter_correction', models.TextField(blank=True, null=True)),
                ('sai_number', models.TextField(blank=True, null=True, verbose_name='SAI Number')),
                ('drv_federal_funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_award_finance_assistance_type_label', models.TextField(blank=True, null=True)),
                ('reporting_period_start', models.DateField(blank=True, null=True)),
                ('reporting_period_end', models.DateField(blank=True, null=True)),
                ('last_modified_date', models.DateField(blank=True, null=True)),
                ('submitted_type', models.TextField(blank=True, null=True, verbose_name='Submitted Type')),
                ('certified_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('period_of_performance_start_date', models.DateField(blank=True, null=True)),
                ('period_of_performance_current_end_date', models.DateField(blank=True, null=True)),
                ('cfda', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.CFDAProgram')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submissions.SubmissionAttributes')),
            ],
            options={
                'db_table': 'transaction_assistance',
            },
        ),
        migrations.CreateModel(
            name='TransactionContract',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('transaction', models.OneToOneField(help_text='Non-specific transaction data, fields shared among both assistance and contract transactions', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='contract_data', serialize=False, to='awards.Transaction')),
                ('piid', models.TextField(blank=True, help_text='The PIID of this transaction')),
                ('parent_award_id', models.TextField(blank=True, help_text='The parent award id for this transaction. This is generally the piid of an IDV', null=True, verbose_name='Parent Award ID')),
                ('cost_or_pricing_data', models.TextField(blank=True, null=True)),
                ('cost_or_pricing_data_description', models.TextField(blank=True, null=True)),
                ('type_of_contract_pricing', models.TextField(blank=True, default='UN', help_text='The type of contract pricing data, as a code', null=True, verbose_name='Type of Contract Pricing')),
                ('type_of_contract_pricing_description', models.TextField(blank=True, help_text='A plain text description of the type of contract pricing data', null=True, verbose_name='Type of Contract Pricing Description')),
                ('naics', models.TextField(blank=True, help_text='Specified which industry the work for this transaction falls into. A 6-digit code', null=True, verbose_name='NAICS')),
                ('naics_description', models.TextField(blank=True, help_text='A plain text description of the NAICS code', null=True, verbose_name='NAICS Description')),
                ('period_of_performance_potential_end_date', models.DateField(help_text='The potential end date of the period of performance', max_length=10, null=True, verbose_name='Period of Performance Potential End Date')),
                ('ordering_period_end_date', models.CharField(blank=True, help_text='The end date for the ordering period', max_length=8, null=True)),
                ('current_total_value_award', models.DecimalField(blank=True, decimal_places=2, help_text='The current value of the award', max_digits=20, null=True)),
                ('base_exercised_options_val', models.DecimalField(blank=True, decimal_places=2, help_text='The current value of the award', max_digits=20, null=True)),
                ('potential_total_value_of_award', models.DecimalField(blank=True, decimal_places=2, help_text='The potential total value of the award', max_digits=20, null=True, verbose_name='Potential Total Value of Award')),
                ('base_and_all_options_value', models.DecimalField(blank=True, db_index=True, decimal_places=2, help_text='The sum of the base_and_all_options_value from associated transactions', max_digits=20, null=True, verbose_name='Base and all Options Value')),
                ('referenced_idv_agency_identifier', models.TextField(blank=True, help_text='The agency identifier of the agency on the IDV', null=True)),
                ('idv_type', models.TextField(blank=True, help_text='The IDV type code', null=True, verbose_name='IDV Type')),
                ('idv_type_description', models.TextField(blank=True, null=True)),
                ('multiple_or_single_award_idv', models.TextField(blank=True, help_text='Specifies whether the IDV is a single more multiple award vehicle', null=True)),
                ('multiple_or_single_award_idv_description', models.TextField(blank=True, null=True)),
                ('type_of_idc', models.TextField(blank=True, help_text='Code representing the type of IDC', null=True, verbose_name='Type of IDC')),
                ('type_of_idc_description', models.TextField(blank=True, null=True)),
                ('a76_fair_act_action', models.TextField(blank=True, help_text='A-76 FAIR act action', null=True, verbose_name='A-76 FAIR Act Action')),
                ('dod_claimant_program_code', models.TextField(blank=True, null=True)),
                ('clinger_cohen_act_planning', models.TextField(blank=True, null=True)),
                ('commercial_item_acquisition_procedures', models.TextField(blank=True, null=True)),
                ('commercial_item_acquisition_procedures_description', models.TextField(blank=True, null=True)),
                ('commercial_item_test_program', models.TextField(blank=True, null=True)),
                ('consolidated_contract', models.TextField(blank=True, null=True)),
                ('contingency_humanitarian_or_peacekeeping_operation', models.TextField(blank=True, null=True)),
                ('contingency_humanitarian_or_peacekeeping_operation_description', models.TextField(blank=True, null=True)),
                ('contract_bundling', models.TextField(blank=True, null=True)),
                ('contract_bundling_description', models.TextField(blank=True, null=True)),
                ('contract_financing', models.TextField(blank=True, null=True)),
                ('contract_financing_description', models.TextField(blank=True, null=True)),
                ('contracting_officers_determination_of_business_size', models.TextField(blank=True, null=True)),
                ('cost_accounting_standards', models.TextField(blank=True, null=True)),
                ('cost_accounting_standards_description', models.TextField(blank=True, null=True)),
                ('country_of_product_or_service_origin', models.TextField(blank=True, null=True)),
                ('davis_bacon_act', models.TextField(blank=True, null=True)),
                ('davis_bacon_act_description', models.TextField(blank=True, null=True)),
                ('evaluated_preference', models.TextField(blank=True, null=True)),
                ('evaluated_preference_description', models.TextField(blank=True, null=True)),
                ('extent_competed', models.TextField(blank=True, null=True)),
                ('extent_competed_description', models.TextField(blank=True, null=True)),
                ('fed_biz_opps', models.TextField(blank=True, null=True)),
                ('fed_biz_opps_description', models.TextField(blank=True, null=True)),
                ('foreign_funding', models.TextField(blank=True, null=True)),
                ('foreign_funding_description', models.TextField(blank=True, null=True)),
                ('gfe_gfp', models.TextField(blank=True, null=True)),
                ('information_technology_commercial_item_category', models.TextField(blank=True, null=True)),
                ('information_technology_commercial_item_category_description', models.TextField(blank=True, null=True)),
                ('interagency_contracting_authority', models.TextField(blank=True, null=True)),
                ('interagency_contracting_authority_description', models.TextField(blank=True, null=True)),
                ('local_area_set_aside', models.TextField(blank=True, null=True)),
                ('major_program', models.TextField(blank=True, null=True)),
                ('purchase_card_as_payment_method', models.TextField(blank=True, null=True)),
                ('multi_year_contract', models.TextField(blank=True, null=True)),
                ('national_interest_action', models.TextField(blank=True, null=True)),
                ('national_interest_action_description', models.TextField(blank=True, null=True)),
                ('number_of_actions', models.TextField(blank=True, null=True)),
                ('number_of_offers_received', models.TextField(blank=True, null=True)),
                ('other_statutory_authority', models.TextField(blank=True, null=True)),
                ('performance_based_service_acquisition', models.TextField(blank=True, null=True)),
                ('performance_based_service_acquisition_description', models.TextField(blank=True, null=True)),
                ('place_of_manufacture', models.TextField(blank=True, null=True)),
                ('place_of_manufacture_description', models.TextField(blank=True, null=True)),
                ('price_evaluation_adjustment_preference_percent_difference', models.DecimalField(blank=True, decimal_places=2, max_digits=5, null=True)),
                ('product_or_service_code', models.TextField(blank=True, null=True)),
                ('program_acronym', models.TextField(blank=True, null=True)),
                ('other_than_full_and_open_competition', models.TextField(blank=True, null=True)),
                ('recovered_materials_sustainability', models.TextField(blank=True, null=True)),
                ('recovered_materials_sustainability_description', models.TextField(blank=True, null=True)),
                ('research', models.TextField(blank=True, null=True)),
                ('research_description', models.TextField(blank=True, null=True)),
                ('sea_transportation', models.TextField(blank=True, null=True)),
                ('sea_transportation_description', models.TextField(blank=True, null=True)),
                ('service_contract_act', models.TextField(blank=True, null=True)),
                ('service_contract_act_description', models.TextField(blank=True, null=True)),
                ('small_business_competitiveness_demonstration_program', models.TextField(blank=True, null=True)),
                ('solicitation_identifier', models.TextField(blank=True, null=True, verbose_name='Solicitation ID')),
                ('solicitation_procedures', models.TextField(blank=True, null=True)),
                ('solicitation_procedures_description', models.TextField(blank=True, null=True)),
                ('fair_opportunity_limited_sources', models.TextField(blank=True, null=True)),
                ('fair_opportunity_limited_sources_description', models.TextField(blank=True, null=True)),
                ('subcontracting_plan', models.TextField(blank=True, null=True)),
                ('subcontracting_plan_description', models.TextField(blank=True, null=True)),
                ('program_system_or_equipment_code', models.TextField(blank=True, null=True)),
                ('type_set_aside', models.TextField(blank=True, null=True, verbose_name='Type Set Aside')),
                ('type_set_aside_description', models.TextField(blank=True, null=True)),
                ('epa_designated_product', models.TextField(blank=True, null=True)),
                ('epa_designated_product_description', models.TextField(blank=True, null=True)),
                ('walsh_healey_act', models.TextField(blank=True, help_text='Denotes whether this transaction is subject to the Walsh-Healey act', null=True)),
                ('transaction_number', models.TextField(blank=True, help_text='The transaction number for this transaction', null=True)),
                ('referenced_idv_modification_number', models.TextField(blank=True, help_text='The modification number for the referenced IDV', null=True)),
                ('rec_flag', models.TextField(blank=True, help_text='The rec flag', null=True)),
                ('drv_parent_award_awarding_agency_code', models.TextField(blank=True, null=True)),
                ('drv_current_aggregated_total_value_of_award', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_current_total_value_of_award', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_aggregated_base_exercised_options_value', models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)),
                ('drv_base_exercised_options_value', models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)),
                ('drv_potential_award_idv_amount_total_estimate', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_potential_aggregated_award_idv_amount_total_estimate', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_potential_aggregated_total_value_of_award', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_potential_total_value_of_award', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_aggregated_base_and_all_options_value', models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)),
                ('drv_base_and_all_options_value', models.DecimalField(max_digits=20, decimal_places=2, blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, help_text='The date this record was created in the API', null=True)),
                ('update_date', models.DateTimeField(auto_now=True, help_text='The last time this record was updated in the API', null=True)),
                ('last_modified_date', models.DateField(blank=True, help_text='The last time this transaction was modified', null=True)),
                ('certified_date', models.DateField(blank=True, help_text='The date this record was certified', null=True)),
                ('reporting_period_start', models.DateField(blank=True, help_text='The date marking the start of the reporting period', null=True)),
                ('reporting_period_end', models.DateField(blank=True, help_text='The date marking the end of the reporting period', null=True)),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submissions.SubmissionAttributes')),
            ],
            options={
                'db_table': 'transaction_contract',
            },
        ),
        migrations.AddField(
            model_name='transaction',
            name='award',
            field=models.ForeignKey(help_text='The award which this transaction is contained in', on_delete=django.db.models.deletion.CASCADE, to='awards.Award'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='awarding_agency',
            field=models.ForeignKey(help_text='The agency which awarded this transaction', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='awards_transaction_awarding_agency', to='references.Agency'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='funding_agency',
            field=models.ForeignKey(help_text='The agency which is funding this transaction', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='awards_transaction_funding_agency', to='references.Agency'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='place_of_performance',
            field=models.ForeignKey(help_text='The location where the work on this transaction was performed', null=True, on_delete=django.db.models.deletion.CASCADE, to='references.Location'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='recipient',
            field=models.ForeignKey(help_text='The recipient for this transaction', null=True, on_delete=django.db.models.deletion.CASCADE, to='references.LegalEntity'),
        ),
        migrations.AddField(
            model_name='transaction',
            name='submission',
            field=models.ForeignKey(help_text='The submission which created this record', on_delete=django.db.models.deletion.CASCADE, to='submissions.SubmissionAttributes'),
        ),
        migrations.AddField(
            model_name='historicaltransactioncontract',
            name='transaction',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='awards.Transaction'),
        ),
        migrations.AddField(
            model_name='historicaltransactionassistance',
            name='transaction',
            field=models.ForeignKey(blank=True, db_constraint=False, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='+', to='awards.Transaction'),
        ),
        migrations.AddField(
            model_name='award',
            name='latest_transaction',
            field=models.ForeignKey(help_text='The latest transaction by action_date associated with this award', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='latest_for_award', to='awards.Transaction'),
        ),
        migrations.AddField(
            model_name='award',
            name='parent_award',
            field=models.ForeignKey(help_text='The parent award, if applicable', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_award', to='awards.Award'),
        ),
        migrations.AddField(
            model_name='award',
            name='place_of_performance',
            field=models.ForeignKey(help_text='The principal place of business, where the majority of the work is performed. For example, in a manufacturing contract, this would be the main plant where items are produced.', null=True, on_delete=django.db.models.deletion.CASCADE, to='references.Location'),
        ),
        migrations.AddField(
            model_name='award',
            name='recipient',
            field=models.ForeignKey(help_text='The recipient of the award', null=True, on_delete=django.db.models.deletion.CASCADE, to='references.LegalEntity'),
        ),
        migrations.AlterIndexTogether(
            name='transaction',
            index_together=set([('award', 'action_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='subaward',
            unique_together=set([('subaward_number', 'award')]),
        ),
    ]

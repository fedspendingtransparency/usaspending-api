# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-10-11 16:17
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('references', '0001_initial'),
        ('submissions', '0001_initial'),
        ('accounts', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Award',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('type', models.TextField(db_index=True, help_text='The mechanism used to distribute funding. The federal government can distribute funding in several forms. These award types include contracts, grants, loans, and direct payments.', null=True, verbose_name='Award Type')),
                ('type_description', models.TextField(blank=True, help_text='The plain text description of the type of the award', null=True, verbose_name='Award Type Description')),
                ('category', models.TextField(help_text="A field that generalizes the award's type.", null=True, verbose_name='Category')),
                ('piid', models.TextField(blank=True, db_index=True, help_text='Procurement Instrument Identifier - A unique identifier assigned to a federal contract, purchase order, basic ordering agreement, basic agreement, and blanket purchase agreement. It is used to track the contract, and any modifications or transactions related to it. After October 2017, it is between 13 and 17 digits, both letters and numbers.', null=True)),
                ('fain', models.TextField(blank=True, db_index=True, help_text='An identification code assigned to each financial assistance award tracking purposes. The FAIN is tied to that award (and all future modifications to that award) throughout the awardâ€™s life. Each FAIN is assigned by an agency. Within an agency, FAIN are unique: each new award must be issued a new FAIN. FAIN stands for Federal Award Identification Number, though the digits are letters, not numbers.', null=True)),
                ('uri', models.TextField(blank=True, db_index=True, help_text='The uri of the award', null=True)),
                ('total_obligation', models.DecimalField(db_index=True, decimal_places=2, help_text='The amount of money the government is obligated to pay for the award', max_digits=15, null=True, verbose_name='Total Obligated')),
                ('total_outlay', models.DecimalField(db_index=True, decimal_places=2, help_text='The total amount of money paid out for this award', max_digits=15, null=True)),
                ('date_signed', models.DateField(db_index=True, help_text='The date the award was signed', null=True, verbose_name='Award Date')),
                ('description', models.TextField(db_index=True, help_text='A description of the award', null=True, verbose_name='Award Description')),
                ('period_of_performance_start_date', models.DateField(db_index=True, help_text='The start date for the period of performance', null=True, verbose_name='Start Date')),
                ('period_of_performance_current_end_date', models.DateField(db_index=True, help_text='The current, not original, period of performance end date', null=True, verbose_name='End Date')),
                ('potential_total_value_of_award', models.DecimalField(blank=True, db_index=True, decimal_places=2, help_text='The sum of the potential_value_of_award from associated transactions', max_digits=20, null=True, verbose_name='Potential Total Value of Award')),
                ('base_and_all_options_value', models.DecimalField(blank=True, db_index=True, decimal_places=2, help_text='The sum of the base_and_all_options_value from associated transactions', max_digits=20, null=True, verbose_name='Base and All Options Value')),
                ('last_modified_date', models.DateField(blank=True, help_text='The date this award was last modified', null=True)),
                ('certified_date', models.DateField(blank=True, help_text='The date this record was certified', null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, help_text='The date this record was created in the API', null=True)),
                ('update_date', models.DateTimeField(auto_now=True, help_text='The last time this record was updated in the API', null=True)),
                ('total_subaward_amount', models.DecimalField(decimal_places=2, max_digits=20, null=True)),
                ('subaward_count', models.IntegerField(default=0)),
                ('awarding_agency', models.ForeignKey(help_text='The awarding agency for the award', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='references.Agency')),
                ('funding_agency', models.ForeignKey(help_text='The funding agency for the award', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='references.Agency')),
            ],
            options={
                'db_table': 'awards',
            },
        ),
        migrations.CreateModel(
            name='FinancialAccountsByAwards',
            fields=[
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('financial_accounts_by_awards_id', models.AutoField(primary_key=True, serialize=False)),
                ('piid', models.TextField(blank=True, null=True)),
                ('parent_award_id', models.TextField(blank=True, null=True)),
                ('fain', models.TextField(blank=True, null=True)),
                ('uri', models.TextField(blank=True, null=True)),
                ('award_type', models.TextField(blank=True, null=True)),
                ('ussgl480100_undelivered_orders_obligations_unpaid_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl480100_undelivered_orders_obligations_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl483100_undelivered_orders_oblig_transferred_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl488100_upward_adjust_pri_undeliv_order_oblig_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl490100_delivered_orders_obligations_unpaid_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl490100_delivered_orders_obligations_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl493100_delivered_orders_oblig_transferred_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl498100_upward_adjust_pri_deliv_orders_oblig_unpaid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl480200_undelivered_orders_oblig_prepaid_advanced_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl480200_undelivered_orders_oblig_prepaid_advanced_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl483200_undeliv_orders_oblig_transferred_prepaid_adv_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl488200_up_adjust_pri_undeliv_order_oblig_ppaid_adv_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl490200_delivered_orders_obligations_paid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl490800_authority_outlayed_not_yet_disbursed_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl490800_authority_outlayed_not_yet_disbursed_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl498200_upward_adjust_pri_deliv_orders_oblig_paid_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('obligations_undelivered_orders_unpaid_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('obligations_delivered_orders_unpaid_total_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('obligations_delivered_orders_unpaid_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlays_undelivered_orders_prepaid_total_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlays_undelivered_orders_prepaid_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlays_delivered_orders_paid_total_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlay_amount_by_award_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlay_amount_by_award_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('obligations_incurred_total_by_award_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl487100_down_adj_pri_unpaid_undel_orders_oblig_recov_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl497100_down_adj_pri_unpaid_deliv_orders_oblig_recov_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('deobligations_recoveries_refunds_of_prior_year_by_award_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('obligations_undelivered_orders_unpaid_total_fyb', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('gross_outlays_delivered_orders_paid_total_cpe', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('drv_award_id_field_type', models.TextField(blank=True, null=True)),
                ('drv_obligations_incurred_total_by_award', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('transaction_obligated_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=21, null=True)),
                ('reporting_period_start', models.DateField(blank=True, null=True)),
                ('reporting_period_end', models.DateField(blank=True, null=True)),
                ('last_modified_date', models.DateField(blank=True, null=True)),
                ('certified_date', models.DateField(blank=True, null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('update_date', models.DateTimeField(auto_now=True, null=True)),
                ('award', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='financial_set', to='awards.Award')),
                ('object_class', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.ObjectClass')),
                ('program_activity', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.RefProgramActivity')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submissions.SubmissionAttributes')),
                ('treasury_account', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='accounts.TreasuryAppropriationAccount')),
            ],
            options={
                'db_table': 'financial_accounts_by_awards',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Subaward',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data_source', models.CharField(choices=[('USA', 'USAspending'), ('DBR', 'DATA Act Broker')], help_text='The source of this entry, either Data Broker (DBR) or USASpending (USA)', max_length=3, null=True)),
                ('subaward_number', models.TextField(db_index=True)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=20)),
                ('description', models.TextField(blank=True, null=True)),
                ('recovery_model_question1', models.TextField(blank=True, null=True)),
                ('recovery_model_question2', models.TextField(blank=True, null=True)),
                ('action_date', models.DateField(blank=True, null=True)),
                ('award_report_fy_month', models.IntegerField()),
                ('award_report_fy_year', models.IntegerField()),
                ('naics', models.TextField(blank=True, help_text='Specified which industry the work for this transaction falls into. A 6-digit code', null=True, verbose_name='NAICS')),
                ('naics_description', models.TextField(blank=True, help_text='A plain text description of the NAICS code', null=True, verbose_name='NAICS Description')),
                ('award', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='subawards', to='awards.Award')),
                ('awarding_agency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='awarding_subawards', to='references.Agency')),
                ('cfda', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='related_subawards', to='references.Cfda')),
                ('funding_agency', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='funding_subawards', to='references.Agency')),
                ('place_of_performance', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='references.Location')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='references.LegalEntity')),
                ('submission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='submissions.SubmissionAttributes')),
            ],
            options={
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='TransactionNormalized',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('usaspending_unique_transaction_id', models.TextField(blank=True, help_text='If this record is legacy USASpending data, this is the unique transaction identifier from that system', null=True)),
                ('type', models.TextField(db_index=True, help_text='The type for this transaction. For example, A, B, C, D', null=True, verbose_name='Action Type')),
                ('type_description', models.TextField(blank=True, help_text='The plain text description of the transaction type', null=True, verbose_name='Action Type Description')),
                ('period_of_performance_start_date', models.DateField(help_text='The period of performance start date', null=True, verbose_name='Period of Performance Start Date')),
                ('period_of_performance_current_end_date', models.DateField(help_text='The current end date of the period of performance', null=True, verbose_name='Period of Performance Current End Date')),
                ('action_date', models.DateField(db_index=True, help_text='The date this transaction was actioned', verbose_name='Transaction Date')),
                ('action_type', models.TextField(blank=True, help_text='The type of transaction. For example, A, B, C, D', null=True)),
                ('action_type_description', models.TextField(blank=True, null=True)),
                ('federal_action_obligation', models.DecimalField(blank=True, db_index=True, decimal_places=2, help_text='The obligation of the federal government for this transaction', max_digits=20, null=True)),
                ('modification_number', models.TextField(blank=True, help_text='The modification number for this transaction', null=True, verbose_name='Modification Number')),
                ('description', models.TextField(help_text='The description of this transaction', null=True)),
                ('drv_award_transaction_usaspend', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_current_total_award_value_amount_adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('drv_potential_total_award_value_amount_adjustment', models.DecimalField(blank=True, decimal_places=2, max_digits=20, null=True)),
                ('last_modified_date', models.DateField(blank=True, help_text='The date this transaction was last modified', null=True)),
                ('certified_date', models.DateField(blank=True, help_text='The date this transaction was certified', null=True)),
                ('create_date', models.DateTimeField(auto_now_add=True, help_text='The date this transaction was created in the API', null=True)),
                ('update_date', models.DateTimeField(auto_now=True, help_text='The last time this transaction was updated in the API', null=True)),
                ('fiscal_year', models.IntegerField(blank=True, help_text='Fiscal Year calculated based on Action Date', null=True)),
            ],
            options={
                'db_table': 'transaction_normalized',
            },
        ),
        migrations.CreateModel(
            name='TransactionFABS',
            fields=[
                ('transaction', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='assistance_data', serialize=False, to='awards.TransactionNormalized')),
                ('published_award_financial_assistance_id', models.TextField(blank=True, null=True)),
                ('afa_generated_unique', models.TextField(blank=True)),
                ('action_date', models.TextField(blank=True, null=True)),
                ('action_type', models.TextField(blank=True, null=True)),
                ('assistance_type', models.TextField(blank=True, null=True)),
                ('award_description', models.TextField(blank=True, null=True)),
                ('awardee_or_recipient_legal', models.TextField(blank=True, null=True)),
                ('awardee_or_recipient_uniqu', models.TextField(blank=True, null=True)),
                ('awarding_agency_code', models.TextField(blank=True, null=True)),
                ('awarding_agency_name', models.TextField(blank=True, null=True)),
                ('awarding_office_code', models.TextField(blank=True, null=True)),
                ('awarding_sub_tier_agency_c', models.TextField(blank=True, null=True)),
                ('awarding_sub_tier_agency_n', models.TextField(blank=True, null=True)),
                ('award_modification_amendme', models.TextField(blank=True, null=True)),
                ('business_funds_indicator', models.TextField(blank=True, null=True)),
                ('business_types', models.TextField(blank=True, null=True)),
                ('cfda_number', models.TextField(blank=True, null=True)),
                ('cfda_title', models.TextField(blank=True, null=True)),
                ('correction_late_delete_ind', models.TextField(blank=True, null=True)),
                ('face_value_loan_guarantee', models.DecimalField(blank=True, decimal_places=2, max_digits=23, null=True)),
                ('fain', models.TextField(blank=True, null=True)),
                ('federal_action_obligation', models.DecimalField(blank=True, decimal_places=2, max_digits=23, null=True)),
                ('fiscal_year_and_quarter_co', models.TextField(blank=True, null=True)),
                ('funding_agency_code', models.TextField(blank=True, null=True)),
                ('funding_agency_name', models.TextField(blank=True, null=True)),
                ('funding_office_code', models.TextField(blank=True, null=True)),
                ('funding_sub_tier_agency_co', models.TextField(blank=True, null=True)),
                ('funding_sub_tier_agency_na', models.TextField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_historical', models.NullBooleanField()),
                ('legal_entity_address_line1', models.TextField(blank=True, null=True)),
                ('legal_entity_address_line2', models.TextField(blank=True, null=True)),
                ('legal_entity_address_line3', models.TextField(blank=True, null=True)),
                ('legal_entity_city_name', models.TextField(blank=True, null=True)),
                ('legal_entity_congressional', models.TextField(blank=True, null=True)),
                ('legal_entity_country_code', models.TextField(blank=True, null=True)),
                ('legal_entity_county_code', models.TextField(blank=True, null=True)),
                ('legal_entity_county_name', models.TextField(blank=True, null=True)),
                ('legal_entity_foreign_city', models.TextField(blank=True, null=True)),
                ('legal_entity_foreign_posta', models.TextField(blank=True, null=True)),
                ('legal_entity_foreign_provi', models.TextField(blank=True, null=True)),
                ('legal_entity_state_code', models.TextField(blank=True, null=True)),
                ('legal_entity_state_name', models.TextField(blank=True, null=True)),
                ('legal_entity_zip5', models.TextField(blank=True, null=True)),
                ('legal_entity_zip_last4', models.TextField(blank=True, null=True)),
                ('modified_at', models.DateTimeField(blank=True, null=True)),
                ('non_federal_funding_amount', models.DecimalField(blank=True, decimal_places=2, max_digits=23, null=True)),
                ('original_loan_subsidy_cost', models.DecimalField(blank=True, decimal_places=2, max_digits=23, null=True)),
                ('period_of_performance_curr', models.TextField(blank=True, null=True)),
                ('period_of_performance_star', models.TextField(blank=True, null=True)),
                ('place_of_performance_city', models.TextField(blank=True, null=True)),
                ('place_of_performance_code', models.TextField(blank=True, null=True)),
                ('place_of_performance_congr', models.TextField(blank=True, null=True)),
                ('place_of_perform_country_c', models.TextField(blank=True, null=True)),
                ('place_of_perform_county_na', models.TextField(blank=True, null=True)),
                ('place_of_performance_forei', models.TextField(blank=True, null=True)),
                ('place_of_perform_state_nam', models.TextField(blank=True, null=True)),
                ('place_of_performance_zip4a', models.TextField(blank=True, null=True)),
                ('record_type', models.IntegerField(blank=True, null=True)),
                ('sai_number', models.TextField(blank=True, null=True)),
                ('total_funding_amount', models.TextField(blank=True, null=True)),
                ('uri', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transaction_fabs',
            },
        ),
        migrations.CreateModel(
            name='TransactionFPDS',
            fields=[
                ('transaction', models.OneToOneField(help_text='Non-specific transaction data, fields shared among both assistance and contract transactions', on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='contract_data', serialize=False, to='awards.TransactionNormalized')),
                ('detached_award_procurement_id', models.TextField(blank=True, null=True)),
                ('detached_award_proc_unique', models.TextField(unique=True)),
                ('piid', models.TextField(blank=True, null=True)),
                ('agency_id', models.TextField(blank=True, null=True)),
                ('awarding_sub_tier_agency_c', models.TextField(blank=True, null=True)),
                ('awarding_sub_tier_agency_n', models.TextField(blank=True, null=True)),
                ('awarding_agency_code', models.TextField(blank=True, null=True)),
                ('awarding_agency_name', models.TextField(blank=True, null=True)),
                ('parent_award_id', models.TextField(blank=True, null=True)),
                ('award_modification_amendme', models.TextField(blank=True, null=True)),
                ('type_of_contract_pricing', models.TextField(blank=True, null=True)),
                ('type_of_contract_pric_desc', models.TextField(blank=True, null=True)),
                ('contract_award_type', models.TextField(blank=True, null=True)),
                ('contract_award_type_desc', models.TextField(blank=True, null=True)),
                ('naics', models.TextField(blank=True, null=True)),
                ('naics_description', models.TextField(blank=True, null=True)),
                ('awardee_or_recipient_uniqu', models.TextField(blank=True, null=True)),
                ('ultimate_parent_legal_enti', models.TextField(blank=True, null=True)),
                ('ultimate_parent_unique_ide', models.TextField(blank=True, null=True)),
                ('award_description', models.TextField(blank=True, null=True)),
                ('place_of_performance_zip4a', models.TextField(blank=True, null=True)),
                ('place_of_perform_city_name', models.TextField(blank=True, null=True)),
                ('place_of_perform_county_na', models.TextField(blank=True, null=True)),
                ('place_of_performance_congr', models.TextField(blank=True, null=True)),
                ('awardee_or_recipient_legal', models.TextField(blank=True, null=True)),
                ('legal_entity_city_name', models.TextField(blank=True, null=True)),
                ('legal_entity_state_code', models.TextField(blank=True, null=True)),
                ('legal_entity_state_descrip', models.TextField(blank=True, null=True)),
                ('legal_entity_zip4', models.TextField(blank=True, null=True)),
                ('legal_entity_congressional', models.TextField(blank=True, null=True)),
                ('legal_entity_address_line1', models.TextField(blank=True, null=True)),
                ('legal_entity_address_line2', models.TextField(blank=True, null=True)),
                ('legal_entity_address_line3', models.TextField(blank=True, null=True)),
                ('legal_entity_country_code', models.TextField(blank=True, null=True)),
                ('legal_entity_country_name', models.TextField(blank=True, null=True)),
                ('period_of_performance_star', models.TextField(blank=True, null=True)),
                ('period_of_performance_curr', models.TextField(blank=True, null=True)),
                ('period_of_perf_potential_e', models.TextField(blank=True, null=True)),
                ('ordering_period_end_date', models.TextField(blank=True, null=True)),
                ('action_date', models.TextField(blank=True, null=True)),
                ('action_type', models.TextField(blank=True, null=True)),
                ('action_type_description', models.TextField(blank=True, null=True)),
                ('federal_action_obligation', models.TextField(blank=True, null=True)),
                ('current_total_value_award', models.TextField(blank=True, null=True)),
                ('potential_total_value_awar', models.TextField(blank=True, null=True)),
                ('total_obligated_amount', models.TextField(blank=True, null=True)),
                ('base_exercised_options_val', models.TextField(blank=True, null=True)),
                ('base_and_all_options_value', models.TextField(blank=True, null=True)),
                ('funding_sub_tier_agency_co', models.TextField(blank=True, null=True)),
                ('funding_sub_tier_agency_na', models.TextField(blank=True, null=True)),
                ('funding_office_code', models.TextField(blank=True, null=True)),
                ('funding_office_name', models.TextField(blank=True, null=True)),
                ('awarding_office_code', models.TextField(blank=True, null=True)),
                ('awarding_office_name', models.TextField(blank=True, null=True)),
                ('referenced_idv_agency_iden', models.TextField(blank=True, null=True)),
                ('referenced_idv_agency_desc', models.TextField(blank=True, null=True)),
                ('funding_agency_code', models.TextField(blank=True, null=True)),
                ('funding_agency_name', models.TextField(blank=True, null=True)),
                ('place_of_performance_locat', models.TextField(blank=True, null=True)),
                ('place_of_performance_state', models.TextField(blank=True, null=True)),
                ('place_of_perfor_state_desc', models.TextField(blank=True, null=True)),
                ('place_of_perform_country_c', models.TextField(blank=True, null=True)),
                ('place_of_perf_country_desc', models.TextField(blank=True, null=True)),
                ('idv_type', models.TextField(blank=True, null=True)),
                ('idv_type_description', models.TextField(blank=True, null=True)),
                ('referenced_idv_type', models.TextField(blank=True, null=True)),
                ('referenced_idv_type_desc', models.TextField(blank=True, null=True)),
                ('vendor_doing_as_business_n', models.TextField(blank=True, null=True)),
                ('vendor_phone_number', models.TextField(blank=True, null=True)),
                ('vendor_fax_number', models.TextField(blank=True, null=True)),
                ('multiple_or_single_award_i', models.TextField(blank=True, null=True)),
                ('multiple_or_single_aw_desc', models.TextField(blank=True, null=True)),
                ('referenced_mult_or_single', models.TextField(blank=True, null=True)),
                ('referenced_mult_or_si_desc', models.TextField(blank=True, null=True)),
                ('type_of_idc', models.TextField(blank=True, null=True)),
                ('type_of_idc_description', models.TextField(blank=True, null=True)),
                ('a_76_fair_act_action', models.TextField(blank=True, null=True)),
                ('a_76_fair_act_action_desc', models.TextField(blank=True, null=True)),
                ('dod_claimant_program_code', models.TextField(blank=True, null=True)),
                ('dod_claimant_prog_cod_desc', models.TextField(blank=True, null=True)),
                ('clinger_cohen_act_planning', models.TextField(blank=True, null=True)),
                ('clinger_cohen_act_pla_desc', models.TextField(blank=True, null=True)),
                ('commercial_item_acquisitio', models.TextField(blank=True, null=True)),
                ('commercial_item_acqui_desc', models.TextField(blank=True, null=True)),
                ('commercial_item_test_progr', models.TextField(blank=True, null=True)),
                ('commercial_item_test_desc', models.TextField(blank=True, null=True)),
                ('consolidated_contract', models.TextField(blank=True, null=True)),
                ('consolidated_contract_desc', models.TextField(blank=True, null=True)),
                ('contingency_humanitarian_o', models.TextField(blank=True, null=True)),
                ('contingency_humanitar_desc', models.TextField(blank=True, null=True)),
                ('contract_bundling', models.TextField(blank=True, null=True)),
                ('contract_bundling_descrip', models.TextField(blank=True, null=True)),
                ('contract_financing', models.TextField(blank=True, null=True)),
                ('contract_financing_descrip', models.TextField(blank=True, null=True)),
                ('contracting_officers_deter', models.TextField(blank=True, null=True)),
                ('contracting_officers_desc', models.TextField(blank=True, null=True)),
                ('cost_accounting_standards', models.TextField(blank=True, null=True)),
                ('cost_accounting_stand_desc', models.TextField(blank=True, null=True)),
                ('cost_or_pricing_data', models.TextField(blank=True, null=True)),
                ('cost_or_pricing_data_desc', models.TextField(blank=True, null=True)),
                ('country_of_product_or_serv', models.TextField(blank=True, null=True)),
                ('country_of_product_or_desc', models.TextField(blank=True, null=True)),
                ('davis_bacon_act', models.TextField(blank=True, null=True)),
                ('davis_bacon_act_descrip', models.TextField(blank=True, null=True)),
                ('evaluated_preference', models.TextField(blank=True, null=True)),
                ('evaluated_preference_desc', models.TextField(blank=True, null=True)),
                ('extent_competed', models.TextField(blank=True, null=True)),
                ('extent_compete_description', models.TextField(blank=True, null=True)),
                ('fed_biz_opps', models.TextField(blank=True, null=True)),
                ('fed_biz_opps_description', models.TextField(blank=True, null=True)),
                ('foreign_funding', models.TextField(blank=True, null=True)),
                ('foreign_funding_desc', models.TextField(blank=True, null=True)),
                ('government_furnished_equip', models.TextField(blank=True, null=True)),
                ('government_furnished_desc', models.TextField(blank=True, null=True)),
                ('information_technology_com', models.TextField(blank=True, null=True)),
                ('information_technolog_desc', models.TextField(blank=True, null=True)),
                ('interagency_contracting_au', models.TextField(blank=True, null=True)),
                ('interagency_contract_desc', models.TextField(blank=True, null=True)),
                ('local_area_set_aside', models.TextField(blank=True, null=True)),
                ('local_area_set_aside_desc', models.TextField(blank=True, null=True)),
                ('major_program', models.TextField(blank=True, null=True)),
                ('purchase_card_as_payment_m', models.TextField(blank=True, null=True)),
                ('purchase_card_as_paym_desc', models.TextField(blank=True, null=True)),
                ('multi_year_contract', models.TextField(blank=True, null=True)),
                ('multi_year_contract_desc', models.TextField(blank=True, null=True)),
                ('national_interest_action', models.TextField(blank=True, null=True)),
                ('national_interest_desc', models.TextField(blank=True, null=True)),
                ('number_of_actions', models.TextField(blank=True, null=True)),
                ('number_of_offers_received', models.TextField(blank=True, null=True)),
                ('other_statutory_authority', models.TextField(blank=True, null=True)),
                ('performance_based_service', models.TextField(blank=True, null=True)),
                ('performance_based_se_desc', models.TextField(blank=True, null=True)),
                ('place_of_manufacture', models.TextField(blank=True, null=True)),
                ('place_of_manufacture_desc', models.TextField(blank=True, null=True)),
                ('price_evaluation_adjustmen', models.TextField(blank=True, null=True)),
                ('product_or_service_code', models.TextField(blank=True, null=True)),
                ('product_or_service_co_desc', models.TextField(blank=True, null=True)),
                ('program_acronym', models.TextField(blank=True, null=True)),
                ('other_than_full_and_open_c', models.TextField(blank=True, null=True)),
                ('other_than_full_and_o_desc', models.TextField(blank=True, null=True)),
                ('recovered_materials_sustai', models.TextField(blank=True, null=True)),
                ('recovered_materials_s_desc', models.TextField(blank=True, null=True)),
                ('research', models.TextField(blank=True, null=True)),
                ('research_description', models.TextField(blank=True, null=True)),
                ('sea_transportation', models.TextField(blank=True, null=True)),
                ('sea_transportation_desc', models.TextField(blank=True, null=True)),
                ('service_contract_act', models.TextField(blank=True, null=True)),
                ('service_contract_act_desc', models.TextField(blank=True, null=True)),
                ('small_business_competitive', models.TextField(blank=True, null=True)),
                ('solicitation_identifier', models.TextField(blank=True, null=True)),
                ('solicitation_procedures', models.TextField(blank=True, null=True)),
                ('solicitation_procedur_desc', models.TextField(blank=True, null=True)),
                ('fair_opportunity_limited_s', models.TextField(blank=True, null=True)),
                ('fair_opportunity_limi_desc', models.TextField(blank=True, null=True)),
                ('subcontracting_plan', models.TextField(blank=True, null=True)),
                ('subcontracting_plan_desc', models.TextField(blank=True, null=True)),
                ('program_system_or_equipmen', models.TextField(blank=True, null=True)),
                ('program_system_or_equ_desc', models.TextField(blank=True, null=True)),
                ('type_set_aside', models.TextField(blank=True, null=True)),
                ('type_set_aside_description', models.TextField(blank=True, null=True)),
                ('epa_designated_product', models.TextField(blank=True, null=True)),
                ('epa_designated_produc_desc', models.TextField(blank=True, null=True)),
                ('walsh_healey_act', models.TextField(blank=True, null=True)),
                ('walsh_healey_act_descrip', models.TextField(blank=True, null=True)),
                ('transaction_number', models.TextField(blank=True, null=True)),
                ('sam_exception', models.TextField(blank=True, null=True)),
                ('sam_exception_description', models.TextField(blank=True, null=True)),
                ('city_local_government', models.TextField(blank=True, null=True)),
                ('county_local_government', models.TextField(blank=True, null=True)),
                ('inter_municipal_local_gove', models.TextField(blank=True, null=True)),
                ('local_government_owned', models.TextField(blank=True, null=True)),
                ('municipality_local_governm', models.TextField(blank=True, null=True)),
                ('school_district_local_gove', models.TextField(blank=True, null=True)),
                ('township_local_government', models.TextField(blank=True, null=True)),
                ('us_state_government', models.TextField(blank=True, null=True)),
                ('us_federal_government', models.TextField(blank=True, null=True)),
                ('federal_agency', models.TextField(blank=True, null=True)),
                ('federally_funded_research', models.TextField(blank=True, null=True)),
                ('us_tribal_government', models.TextField(blank=True, null=True)),
                ('foreign_government', models.TextField(blank=True, null=True)),
                ('community_developed_corpor', models.TextField(blank=True, null=True)),
                ('labor_surplus_area_firm', models.TextField(blank=True, null=True)),
                ('corporate_entity_not_tax_e', models.TextField(blank=True, null=True)),
                ('corporate_entity_tax_exemp', models.TextField(blank=True, null=True)),
                ('partnership_or_limited_lia', models.TextField(blank=True, null=True)),
                ('sole_proprietorship', models.TextField(blank=True, null=True)),
                ('small_agricultural_coopera', models.TextField(blank=True, null=True)),
                ('international_organization', models.TextField(blank=True, null=True)),
                ('us_government_entity', models.TextField(blank=True, null=True)),
                ('emerging_small_business', models.TextField(blank=True, null=True)),
                ('c8a_program_participant', models.TextField(blank=True, null=True)),
                ('sba_certified_8_a_joint_ve', models.TextField(blank=True, null=True)),
                ('dot_certified_disadvantage', models.TextField(blank=True, null=True)),
                ('self_certified_small_disad', models.TextField(blank=True, null=True)),
                ('historically_underutilized', models.TextField(blank=True, null=True)),
                ('small_disadvantaged_busine', models.TextField(blank=True, null=True)),
                ('the_ability_one_program', models.TextField(blank=True, null=True)),
                ('historically_black_college', models.TextField(blank=True, null=True)),
                ('c1862_land_grant_college', models.TextField(blank=True, null=True)),
                ('c1890_land_grant_college', models.TextField(blank=True, null=True)),
                ('c1994_land_grant_college', models.TextField(blank=True, null=True)),
                ('minority_institution', models.TextField(blank=True, null=True)),
                ('private_university_or_coll', models.TextField(blank=True, null=True)),
                ('school_of_forestry', models.TextField(blank=True, null=True)),
                ('state_controlled_instituti', models.TextField(blank=True, null=True)),
                ('tribal_college', models.TextField(blank=True, null=True)),
                ('veterinary_college', models.TextField(blank=True, null=True)),
                ('educational_institution', models.TextField(blank=True, null=True)),
                ('alaskan_native_servicing_i', models.TextField(blank=True, null=True)),
                ('community_development_corp', models.TextField(blank=True, null=True)),
                ('native_hawaiian_servicing', models.TextField(blank=True, null=True)),
                ('domestic_shelter', models.TextField(blank=True, null=True)),
                ('manufacturer_of_goods', models.TextField(blank=True, null=True)),
                ('hospital_flag', models.TextField(blank=True, null=True)),
                ('veterinary_hospital', models.TextField(blank=True, null=True)),
                ('hispanic_servicing_institu', models.TextField(blank=True, null=True)),
                ('foundation', models.TextField(blank=True, null=True)),
                ('woman_owned_business', models.TextField(blank=True, null=True)),
                ('minority_owned_business', models.TextField(blank=True, null=True)),
                ('women_owned_small_business', models.TextField(blank=True, null=True)),
                ('economically_disadvantaged', models.TextField(blank=True, null=True)),
                ('joint_venture_women_owned', models.TextField(blank=True, null=True)),
                ('joint_venture_economically', models.TextField(blank=True, null=True)),
                ('veteran_owned_business', models.TextField(blank=True, null=True)),
                ('service_disabled_veteran_o', models.TextField(blank=True, null=True)),
                ('contracts', models.TextField(blank=True, null=True)),
                ('grants', models.TextField(blank=True, null=True)),
                ('receives_contracts_and_gra', models.TextField(blank=True, null=True)),
                ('airport_authority', models.TextField(blank=True, null=True)),
                ('council_of_governments', models.TextField(blank=True, null=True)),
                ('housing_authorities_public', models.TextField(blank=True, null=True)),
                ('interstate_entity', models.TextField(blank=True, null=True)),
                ('planning_commission', models.TextField(blank=True, null=True)),
                ('port_authority', models.TextField(blank=True, null=True)),
                ('transit_authority', models.TextField(blank=True, null=True)),
                ('subchapter_s_corporation', models.TextField(blank=True, null=True)),
                ('limited_liability_corporat', models.TextField(blank=True, null=True)),
                ('foreign_owned_and_located', models.TextField(blank=True, null=True)),
                ('american_indian_owned_busi', models.TextField(blank=True, null=True)),
                ('alaskan_native_owned_corpo', models.TextField(blank=True, null=True)),
                ('indian_tribe_federally_rec', models.TextField(blank=True, null=True)),
                ('native_hawaiian_owned_busi', models.TextField(blank=True, null=True)),
                ('tribally_owned_business', models.TextField(blank=True, null=True)),
                ('asian_pacific_american_own', models.TextField(blank=True, null=True)),
                ('black_american_owned_busin', models.TextField(blank=True, null=True)),
                ('hispanic_american_owned_bu', models.TextField(blank=True, null=True)),
                ('native_american_owned_busi', models.TextField(blank=True, null=True)),
                ('subcontinent_asian_asian_i', models.TextField(blank=True, null=True)),
                ('other_minority_owned_busin', models.TextField(blank=True, null=True)),
                ('for_profit_organization', models.TextField(blank=True, null=True)),
                ('nonprofit_organization', models.TextField(blank=True, null=True)),
                ('other_not_for_profit_organ', models.TextField(blank=True, null=True)),
                ('us_local_government', models.TextField(blank=True, null=True)),
                ('referenced_idv_modificatio', models.TextField(blank=True, null=True)),
                ('undefinitized_action', models.TextField(blank=True, null=True)),
                ('undefinitized_action_desc', models.TextField(blank=True, null=True)),
                ('domestic_or_foreign_entity', models.TextField(blank=True, null=True)),
                ('domestic_or_foreign_e_desc', models.TextField(blank=True, null=True)),
                ('annual_revenue', models.TextField(blank=True, null=True)),
                ('division_name', models.TextField(blank=True, null=True)),
                ('division_number_or_office', models.TextField(blank=True, null=True)),
                ('number_of_employees', models.TextField(blank=True, null=True)),
                ('vendor_alternate_name', models.TextField(blank=True, null=True)),
                ('vendor_alternate_site_code', models.TextField(blank=True, null=True)),
                ('vendor_enabled', models.TextField(blank=True, null=True)),
                ('vendor_legal_org_name', models.TextField(blank=True, null=True)),
                ('vendor_location_disabled_f', models.TextField(blank=True, null=True)),
                ('vendor_site_code', models.TextField(blank=True, null=True)),
                ('pulled_from', models.TextField(blank=True, null=True)),
                ('last_modified', models.TextField(blank=True, null=True)),
                ('initial_report_date', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(blank=True, null=True)),
                ('updated_at', models.DateTimeField(blank=True, null=True)),
            ],
            options={
                'db_table': 'transaction_fpds',
            },
        ),
        migrations.AddField(
            model_name='transactionnormalized',
            name='award',
            field=models.ForeignKey(help_text='The award which this transaction is contained in', on_delete=django.db.models.deletion.CASCADE, to='awards.Award'),
        ),
        migrations.AddField(
            model_name='transactionnormalized',
            name='awarding_agency',
            field=models.ForeignKey(help_text='The agency which awarded this transaction', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='awards_transactionnormalized_awarding_agency', to='references.Agency'),
        ),
        migrations.AddField(
            model_name='transactionnormalized',
            name='funding_agency',
            field=models.ForeignKey(help_text='The agency which is funding this transaction', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='awards_transactionnormalized_funding_agency', to='references.Agency'),
        ),
        migrations.AddField(
            model_name='transactionnormalized',
            name='place_of_performance',
            field=models.ForeignKey(help_text='The location where the work on this transaction was performed', null=True, on_delete=django.db.models.deletion.CASCADE, to='references.Location'),
        ),
        migrations.AddField(
            model_name='transactionnormalized',
            name='recipient',
            field=models.ForeignKey(help_text='The recipient for this transaction', null=True, on_delete=django.db.models.deletion.CASCADE, to='references.LegalEntity'),
        ),
        migrations.AddField(
            model_name='award',
            name='latest_transaction',
            field=models.ForeignKey(help_text='The latest transaction by action_date and mod associated with this award', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='latest_for_award', to='awards.TransactionNormalized'),
        ),
        migrations.AddField(
            model_name='award',
            name='parent_award',
            field=models.ForeignKey(help_text='The parent award, if applicable', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='child_award', to='awards.Award'),
        ),
        migrations.AddField(
            model_name='award',
            name='place_of_performance',
            field=models.ForeignKey(help_text='The principal place of business, where the majority of the work is performed. For example, in a manufacturing contract, this would be the main plant where items are produced.', null=True, on_delete=django.db.models.deletion.CASCADE, to='references.Location'),
        ),
        migrations.AddField(
            model_name='award',
            name='recipient',
            field=models.ForeignKey(help_text='The recipient of the award', null=True, on_delete=django.db.models.deletion.CASCADE, to='references.LegalEntity'),
        ),
        migrations.AlterIndexTogether(
            name='transactionnormalized',
            index_together=set([('award', 'action_date')]),
        ),
        migrations.AlterUniqueTogether(
            name='transactionfabs',
            unique_together=set([('awarding_sub_tier_agency_c', 'award_modification_amendme', 'fain', 'uri')]),
        ),
        migrations.AlterUniqueTogether(
            name='subaward',
            unique_together=set([('subaward_number', 'award')]),
        ),
    ]

import pytest
from model_bakery import baker

from usaspending_api.references.models.disaster_emergency_fund_code import (
    DisasterEmergencyFundCode,
)


@pytest.fixture
def covid_faba_spending_data():
    # Loan type awards
    baker.make(
        "disaster.CovidFABASpending",
        spending_level="treasury_account",
        funding_federal_account_id="21",
        funding_federal_account_code="000-0000",
        funding_federal_account_name="gifts",
        funding_treasury_account_id=23,
        funding_treasury_account_code="2020/98",
        funding_treasury_account_name="evergreens",
        defc="L",
        award_type="07",
        award_count=1,
        obligation_sum=1.0,
        outlay_sum=1.0,
        face_value_of_loan=3333.0,
    )
    baker.make(
        "disaster.CovidFABASpending",
        spending_level="treasury_account",
        funding_federal_account_id="21",
        funding_federal_account_code="000-0000",
        funding_federal_account_name="gifts",
        funding_treasury_account_id=24,
        funding_treasury_account_code="2020/52",
        funding_treasury_account_name="ferns",
        defc="L",
        award_type="08",
        award_count=1,
        obligation_sum=3.0,
        outlay_sum=333.0,
        face_value_of_loan=4444.0,
    )

    # Non-loan type awards
    baker.make(
        "disaster.CovidFABASpending",
        spending_level="treasury_account",
        funding_federal_account_id="21",
        funding_federal_account_code="000-0000",
        funding_federal_account_name="gifts",
        funding_treasury_account_id=22,
        funding_treasury_account_code="2020/99",
        funding_treasury_account_name="flowers",
        defc="M",
        award_type="A",
        award_count=1,
        obligation_sum=100.0,
        outlay_sum=111.0,
    )
    baker.make(
        "disaster.CovidFABASpending",
        spending_level="treasury_account",
        funding_federal_account_id="21",
        funding_federal_account_code="000-0000",
        funding_federal_account_name="gifts",
        funding_treasury_account_id=23,
        funding_treasury_account_code="2020/98",
        funding_treasury_account_name="evergreens",
        defc="L",
        award_type="B",
        award_count=1,
        obligation_sum=200.0,
        outlay_sum=222.0,
    )

    baker.make(
        "references.DisasterEmergencyFundCode",
        code="L",
        public_law="Law for code L",
    )
    baker.make(
        "references.DisasterEmergencyFundCode",
        code="M",
        public_law="Law for code M",
    )
    baker.make(
        "references.DisasterEmergencyFundCode",
        code="N",
        public_law="Law for code N",
    )
    baker.make(
        "references.DisasterEmergencyFundCode",
        code="O",
        public_law="Law for code O",
    )
    baker.make(
        "references.DisasterEmergencyFundCode",
        code="P",
        public_law="Law for code P",
    )
    baker.make("references.DisasterEmergencyFundCode", code="A", public_law="Law for code A")
    baker.make("references.DisasterEmergencyFundCode", code="9", public_law="Law for code 9")


@pytest.fixture
def generic_account_data():
    baker.make(
        "submissions.DABSSubmissionWindowSchedule",
        id=11,
        is_quarter=False,
        submission_fiscal_year=2020,
        submission_fiscal_quarter=4,
        submission_fiscal_month=12,
        submission_reveal_date="2020-11-17",
        period_start_date="2020-09-01",
    )
    baker.make(
        "submissions.DABSSubmissionWindowSchedule",
        id=22,
        is_quarter=False,
        submission_fiscal_year=2021,
        submission_fiscal_quarter=4,
        submission_fiscal_month=12,
        submission_reveal_date="2021-11-17",
        period_start_date="2021-09-01",
    )
    baker.make(
        "submissions.DABSSubmissionWindowSchedule",
        id=33,
        is_quarter=False,
        submission_fiscal_year=2022,
        submission_fiscal_quarter=3,
        submission_fiscal_month=7,
        submission_reveal_date="2020-06-15",
        period_start_date="2022-04-01",
    )
    baker.make(
        "submissions.DABSSubmissionWindowSchedule",
        id=44,
        is_quarter=True,
        submission_fiscal_year=2022,
        submission_fiscal_quarter=3,
        submission_fiscal_month=7,
        submission_reveal_date="2020-06-15",
        period_start_date="2022-04-01",
    )
    baker.make("references.DisasterEmergencyFundCode", code="P")
    baker.make("references.DisasterEmergencyFundCode", code="A")
    defc_l = baker.make("references.DisasterEmergencyFundCode", code="L", group_name="covid_19")
    defc_m = baker.make("references.DisasterEmergencyFundCode", code="M", group_name="covid_19")
    defc_n = baker.make("references.DisasterEmergencyFundCode", code="N", group_name="covid_19")
    defc_o = baker.make("references.DisasterEmergencyFundCode", code="O", group_name="covid_19")
    defc_9 = baker.make("references.DisasterEmergencyFundCode", code="9")
    award1 = baker.make("search.AwardSearch", award_id=111, total_loan_value=1111, type="A")
    award2 = baker.make("search.AwardSearch", award_id=222, total_loan_value=2222, type="A")
    award3 = baker.make("search.AwardSearch", award_id=333, total_loan_value=3333, type="07")
    award4 = baker.make("search.AwardSearch", award_id=444, total_loan_value=4444, type="08")
    fed_acct1 = baker.make(
        "accounts.FederalAccount",
        account_title="gifts",
        federal_account_code="000-0000",
        id=21,
    )
    tre_acct1 = baker.make(
        "accounts.TreasuryAppropriationAccount",
        federal_account=fed_acct1,
        tas_rendering_label="2020/99",
        account_title="flowers",
        treasury_account_identifier=22,
    )
    tre_acct2 = baker.make(
        "accounts.TreasuryAppropriationAccount",
        federal_account=fed_acct1,
        tas_rendering_label="2020/98",
        account_title="evergreens",
        treasury_account_identifier=23,
    )
    tre_acct3 = baker.make(
        "accounts.TreasuryAppropriationAccount",
        federal_account=fed_acct1,
        tas_rendering_label="2020/52",
        account_title="ferns",
        treasury_account_identifier=24,
    )
    sub1 = baker.make(
        "submissions.SubmissionAttributes",
        reporting_period_start="2022-05-15",
        reporting_period_end="2022-05-29",
        reporting_fiscal_year=2022,
        reporting_fiscal_quarter=3,
        reporting_fiscal_period=7,
        is_final_balances_for_fy=True,
        quarter_format_flag=False,
        submission_window_id=11,
    )
    baker.make(
        "financial_activities.FinancialAccountsByProgramActivityObjectClass",
        submission=sub1,
        obligations_incurred_by_program_object_class_cpe=1000,
        gross_outlay_amount_by_program_object_class_cpe=500,
        deobligations_recoveries_refund_pri_program_object_class_cpe=-900,
        ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe=10,
        ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe=1,
        prior_year_adjustment="X",
        ussgl480100_undelivered_orders_obligations_unpaid_cpe=15,
        ussgl480200_undelivered_orders_oblig_prepaid_advanced_cpe=20,
        ussgl487100_down_adj_pri_unpaid_undel_orders_oblig_recov_cpe=15,
        ussgl488100_upward_adjust_pri_undeliv_order_oblig_unpaid_cpe=5,
        ussgl488200_up_adjust_pri_undeliv_order_oblig_ppaid_adv_cpe=6,
        ussgl490100_delivered_orders_obligations_unpaid_cpe=7,
        ussgl490200_delivered_orders_obligations_paid_cpe=8,
        ussgl490800_authority_outlayed_not_yet_disbursed_cpe=100,
        ussgl497100_down_adj_pri_unpaid_deliv_orders_oblig_recov_cpe=13,
        ussgl498100_upward_adjust_pri_deliv_orders_oblig_unpaid_cpe=9,
        ussgl498200_upward_adjust_pri_deliv_orders_oblig_paid_cpe=14,
        ussgl480110_rein_undel_ord_cpe=75,
        ussgl490110_rein_deliv_ord_cpe=63,
        disaster_emergency_fund=defc_m,
        treasury_account=tre_acct1,
    )
    baker.make(
        "financial_activities.FinancialAccountsByProgramActivityObjectClass",
        submission=sub1,
        obligations_incurred_by_program_object_class_cpe=500,
        gross_outlay_amount_by_program_object_class_cpe=20,
        deobligations_recoveries_refund_pri_program_object_class_cpe=-300,
        ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe=2,
        ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe=200,
        prior_year_adjustment="P",
        ussgl480100_undelivered_orders_obligations_unpaid_cpe=15,
        ussgl480200_undelivered_orders_oblig_prepaid_advanced_cpe=20,
        ussgl487100_down_adj_pri_unpaid_undel_orders_oblig_recov_cpe=15,
        ussgl488100_upward_adjust_pri_undeliv_order_oblig_unpaid_cpe=5,
        ussgl488200_up_adjust_pri_undeliv_order_oblig_ppaid_adv_cpe=6,
        ussgl490100_delivered_orders_obligations_unpaid_cpe=7,
        ussgl490200_delivered_orders_obligations_paid_cpe=8,
        ussgl490800_authority_outlayed_not_yet_disbursed_cpe=100,
        ussgl497100_down_adj_pri_unpaid_deliv_orders_oblig_recov_cpe=13,
        ussgl498100_upward_adjust_pri_deliv_orders_oblig_unpaid_cpe=9,
        ussgl498200_upward_adjust_pri_deliv_orders_oblig_paid_cpe=14,
        ussgl480110_rein_undel_ord_cpe=75,
        ussgl490110_rein_deliv_ord_cpe=63,
        disaster_emergency_fund=defc_l,
        treasury_account=tre_acct2,
    )
    baker.make(
        "financial_activities.FinancialAccountsByProgramActivityObjectClass",
        submission=sub1,
        obligations_incurred_by_program_object_class_cpe=6,
        gross_outlay_amount_by_program_object_class_cpe=7,
        deobligations_recoveries_refund_pri_program_object_class_cpe=-4,
        ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe=-2,
        ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe=-3,
        disaster_emergency_fund=defc_9,
        prior_year_adjustment="X",
        ussgl480100_undelivered_orders_obligations_unpaid_cpe=15,
        ussgl480200_undelivered_orders_oblig_prepaid_advanced_cpe=20,
        ussgl487100_down_adj_pri_unpaid_undel_orders_oblig_recov_cpe=15,
        ussgl488100_upward_adjust_pri_undeliv_order_oblig_unpaid_cpe=5,
        ussgl488200_up_adjust_pri_undeliv_order_oblig_ppaid_adv_cpe=6,
        ussgl490100_delivered_orders_obligations_unpaid_cpe=7,
        ussgl490200_delivered_orders_obligations_paid_cpe=8,
        ussgl490800_authority_outlayed_not_yet_disbursed_cpe=100,
        ussgl497100_down_adj_pri_unpaid_deliv_orders_oblig_recov_cpe=13,
        ussgl498100_upward_adjust_pri_deliv_orders_oblig_unpaid_cpe=9,
        ussgl498200_upward_adjust_pri_deliv_orders_oblig_paid_cpe=14,
        ussgl480110_rein_undel_ord_cpe=75,
        ussgl490110_rein_deliv_ord_cpe=63,
        treasury_account=tre_acct2,
    )
    baker.make(
        "financial_activities.FinancialAccountsByProgramActivityObjectClass",
        submission=sub1,
        obligations_incurred_by_program_object_class_cpe=10,
        gross_outlay_amount_by_program_object_class_cpe=4,
        deobligations_recoveries_refund_pri_program_object_class_cpe=-9,
        ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe=-1,
        ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe=-2,
        disaster_emergency_fund=defc_o,
        prior_year_adjustment="B",
        ussgl480100_undelivered_orders_obligations_unpaid_cpe=15,
        ussgl480200_undelivered_orders_oblig_prepaid_advanced_cpe=20,
        ussgl487100_down_adj_pri_unpaid_undel_orders_oblig_recov_cpe=15,
        ussgl488100_upward_adjust_pri_undeliv_order_oblig_unpaid_cpe=5,
        ussgl488200_up_adjust_pri_undeliv_order_oblig_ppaid_adv_cpe=6,
        ussgl490100_delivered_orders_obligations_unpaid_cpe=7,
        ussgl490200_delivered_orders_obligations_paid_cpe=8,
        ussgl490800_authority_outlayed_not_yet_disbursed_cpe=100,
        ussgl497100_down_adj_pri_unpaid_deliv_orders_oblig_recov_cpe=13,
        ussgl498100_upward_adjust_pri_deliv_orders_oblig_unpaid_cpe=9,
        ussgl498200_upward_adjust_pri_deliv_orders_oblig_paid_cpe=14,
        ussgl480110_rein_undel_ord_cpe=75,
        ussgl490110_rein_deliv_ord_cpe=63,
        treasury_account=tre_acct2,
    )
    baker.make(
        "financial_activities.FinancialAccountsByProgramActivityObjectClass",
        submission=sub1,
        obligations_incurred_by_program_object_class_cpe=13,
        gross_outlay_amount_by_program_object_class_cpe=296,
        deobligations_recoveries_refund_pri_program_object_class_cpe=-10,
        ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe=30,
        ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe=7,
        disaster_emergency_fund=defc_n,
        prior_year_adjustment="B",
        ussgl480100_undelivered_orders_obligations_unpaid_cpe=15,
        ussgl480200_undelivered_orders_oblig_prepaid_advanced_cpe=20,
        ussgl487100_down_adj_pri_unpaid_undel_orders_oblig_recov_cpe=15,
        ussgl488100_upward_adjust_pri_undeliv_order_oblig_unpaid_cpe=5,
        ussgl488200_up_adjust_pri_undeliv_order_oblig_ppaid_adv_cpe=6,
        ussgl490100_delivered_orders_obligations_unpaid_cpe=7,
        ussgl490200_delivered_orders_obligations_paid_cpe=8,
        ussgl490800_authority_outlayed_not_yet_disbursed_cpe=100,
        ussgl497100_down_adj_pri_unpaid_deliv_orders_oblig_recov_cpe=13,
        ussgl498100_upward_adjust_pri_deliv_orders_oblig_unpaid_cpe=9,
        ussgl498200_upward_adjust_pri_deliv_orders_oblig_paid_cpe=14,
        ussgl480110_rein_undel_ord_cpe=75,
        ussgl490110_rein_deliv_ord_cpe=63,
        treasury_account=tre_acct3,
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        submission=sub1,
        piid="0wefjwe",
        award_id=111,
        parent_award_id="3443r",
        transaction_obligated_amount=100,
        gross_outlay_amount_by_award_cpe=111,
        disaster_emergency_fund=defc_m,
        treasury_account=tre_acct1,
        distinct_award_key="0wefjwe|3443r||",
        ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe=0,
        ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe=0,
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        submission=sub1,
        award=award1,
        piid="0wefjwe",
        award_id=111,
        parent_award_id="3443r",
        transaction_obligated_amount=200,
        gross_outlay_amount_by_award_cpe=222,
        disaster_emergency_fund=defc_l,
        treasury_account=tre_acct2,
        distinct_award_key="0wefjwe|3443r||",
        ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe=0,
        ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe=0,
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        submission=sub1,
        award=award2,
        uri="3298rhed",
        award_id=222,
        transaction_obligated_amount=2,
        gross_outlay_amount_by_award_cpe=2,
        disaster_emergency_fund=defc_9,
        treasury_account=tre_acct2,
        distinct_award_key="|||3298rhed",
        ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe=0,
        ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe=0,
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        submission=sub1,
        award=award3,
        fain="43tgfvdvfv",
        award_id=333,
        transaction_obligated_amount=1,
        gross_outlay_amount_by_award_cpe=1,
        disaster_emergency_fund=defc_o,
        treasury_account=tre_acct2,
        distinct_award_key="||43tgfvdvfv|",
        ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe=0,
        ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe=0,
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        submission=sub1,
        award=award4,
        fain="woefhowe",
        award_id=444,
        transaction_obligated_amount=3,
        gross_outlay_amount_by_award_cpe=333,
        disaster_emergency_fund=defc_n,
        treasury_account=tre_acct3,
        distinct_award_key="||woefhowe|",
        ussgl487200_down_adj_pri_ppaid_undel_orders_oblig_refund_cpe=0,
        ussgl497200_down_adj_pri_paid_deliv_orders_oblig_refund_cpe=0,
    )
    baker.make(
        "references.GTASSF133Balances",
        budget_authority_appropriation_amount_cpe=4358.0,
        budget_authority_unobligated_balance_brought_forward_cpe=1000,
        fiscal_year=2020,
        fiscal_period=12,
        disaster_emergency_fund=defc_m,
        treasury_account_identifier=tre_acct1,
        total_budgetary_resources_cpe=1125181,
        deobligations_or_recoveries_or_refunds_from_prior_year_cpe=983274,
        prior_year_paid_obligation_recoveries=98327,
    )
    baker.make(
        "references.GTASSF133Balances",
        budget_authority_appropriation_amount_cpe=109237.0,
        budget_authority_unobligated_balance_brought_forward_cpe=2000,
        fiscal_year=2021,
        fiscal_period=12,
        disaster_emergency_fund=defc_m,
        treasury_account_identifier=tre_acct2,
        total_budgetary_resources_cpe=36475837.1,
        deobligations_or_recoveries_or_refunds_from_prior_year_cpe=32984723.9,
        prior_year_paid_obligation_recoveries=2398743.2,
    )
    baker.make(
        "references.GTASSF133Balances",
        budget_authority_appropriation_amount_cpe=39248.0,
        budget_authority_unobligated_balance_brought_forward_cpe=3000,
        fiscal_year=2022,
        fiscal_period=7,
        disaster_emergency_fund=defc_m,
        treasury_account_identifier=tre_acct3,
        total_budgetary_resources_cpe=394368.87,
        deobligations_or_recoveries_or_refunds_from_prior_year_cpe=999.99,
        prior_year_paid_obligation_recoveries=888.88,
    )
    baker.make(
        "disaster.CovidFABASpending",
        spending_level="awards",
        defc="L",
        award_type="A",
        award_count=1,
        outlay_sum=222.0,
        obligation_sum=200.0,
    )
    baker.make(
        "disaster.CovidFABASpending",
        spending_level="awards",
        defc="N",
        award_type="09",
        award_count=1,
        outlay_sum=100.0,
        obligation_sum=2.0,
    )
    baker.make(
        "disaster.CovidFABASpending",
        spending_level="awards",
        defc="N",
        award_type="A",
        award_count=2,
        outlay_sum=334.0,
        obligation_sum=4.0,
    )
    baker.make(
        "disaster.CovidFABASpending",
        spending_level="awards",
        defc="O",
        award_type="10",
        award_count=1,
        outlay_sum=234.0,
        obligation_sum=2.0,
    )
    baker.make(
        "disaster.CovidFABASpending",
        spending_level="awards",
        defc="P",
        award_type="07",
        award_count=2,
        outlay_sum=334.0,
        obligation_sum=4.0,
        face_value_of_loan=7777.0,
    )


@pytest.fixture
def unlinked_faba_account_data():
    fed_acct = baker.make(
        "accounts.FederalAccount",
        account_title="soap",
        federal_account_code="999-0000",
        id=99,
    )
    tre_acct = baker.make(
        "accounts.TreasuryAppropriationAccount",
        federal_account=fed_acct,
        tas_rendering_label="2020/99",
        account_title="dove",
        treasury_account_identifier=99,
        gtas__budget_authority_appropriation_amount_cpe=9939248,
    )
    sub = baker.make(
        "submissions.SubmissionAttributes",
        reporting_period_start="2022-05-15",
        reporting_period_end="2022-05-29",
        reporting_fiscal_year=2022,
        reporting_fiscal_quarter=3,
        reporting_fiscal_period=7,
        is_final_balances_for_fy=True,
        quarter_format_flag=False,
        submission_window_id=11,
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        submission=sub,
        piid="weuf",
        transaction_obligated_amount=999999,
        gross_outlay_amount_by_award_cpe=9999999,
        disaster_emergency_fund=DisasterEmergencyFundCode.objects.get(code="N"),
        treasury_account=tre_acct,
        distinct_award_key="weuf|||",
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        submission=sub,
        piid="weuf",
        parent_award_id="weuf22",
        transaction_obligated_amount=88888,
        gross_outlay_amount_by_award_cpe=888888,
        disaster_emergency_fund=DisasterEmergencyFundCode.objects.get(code="N"),
        treasury_account=tre_acct,
        distinct_award_key="weuf|weuf22||",
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        submission=sub,
        piid="0iwnff",
        transaction_obligated_amount=5,
        gross_outlay_amount_by_award_cpe=555,
        disaster_emergency_fund=DisasterEmergencyFundCode.objects.get(code="L"),
        treasury_account=tre_acct,
        distinct_award_key="0iwnff|||",
    )
    baker.make(
        "awards.FinancialAccountsByAwards",
        submission=sub,
        fain="howeusd",
        transaction_obligated_amount=8,
        gross_outlay_amount_by_award_cpe=888,
        disaster_emergency_fund=DisasterEmergencyFundCode.objects.get(code="N"),
        treasury_account=tre_acct,
        distinct_award_key="||howeusd|",
    )

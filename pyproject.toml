[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "usaspending-api"
version = "1.0.0"
description = """
    This API is utilized by USAspending.gov to obtain all federal spending data which is open source and provided to
    the public as part of the DATA Act.
    """
readme = 'README.md'
license = "CC0-1.0"
license-files = ["LICENSE"]
requires-python = '>=3.10'
classifiers=[
    "Development Status :: 5 - Production/Stable",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3 :: Only",
]
dependencies = [
    "asyncpg==0.29.*",
    "attrs==23.2.*",
    "boto3>=1.34,<1.36",
    "certifi==2024.7.4",
    "dataclasses-json==0.6.*",
    "dj-database-url==2.1.0",
    "django-cors-headers==4.3.*",
    "django-debug-toolbar==4.3.*",
    "django-extensions==3.2.*",
    "django-spaghetti-and-meatballs==0.4.*",
    "Django==4.2.*",
    "Django==4.2.*",
    "django_cte==1.3.*",
    "djangorestframework==3.15.*",
    "docutils>=0.10,<0.17",
    "drf-api-tracking==1.8.4",
    "drf-extensions==0.7.*",
    "elasticsearch-dsl==7.4.*",
    "elasticsearch==7.10.*",
    "et-xmlfile==1.1.0",
    "filelock==3.13.1",
    "fiscalyear==0.4.0",
    "Markdown==3.5.*",
    "marshmallow==3.21.1",
    "numpy==1.26.*",
    "openpyxl==3.1.*",
    "pandas==2.2.*",
    "psutil==5.9.*",
    "psycopg2==2.9.9",  # Pinning exact version because this package will drop support for Python versions in patches
    "py-gfm==2.0.0",
    "pydantic[dotenv]==1.9.*",
    "python-json-logger==2.0.7",
    "requests==2.31.*",
    "retrying==1.3.4",
    "urllib3==1.26.*",

    # Opentelemetry Dependencies
    "opentelemetry-api==1.28.2",
    "opentelemetry-distro==0.49b2",
    "opentelemetry-exporter-otlp==1.28.2",
    "opentelemetry-exporter-otlp-proto-common==1.28.2",
    "opentelemetry-exporter-otlp-proto-grpc==1.28.2",
    "opentelemetry-exporter-otlp-proto-http==1.28.2",
    "opentelemetry-instrumentation==0.49b2",
    "opentelemetry-instrumentation-asgi==0.49b2",
    "opentelemetry-instrumentation-asyncio==0.49b2",
    "opentelemetry-instrumentation-asyncpg==0.49b2",
    "opentelemetry-instrumentation-boto3sqs==0.49b2",
    "opentelemetry-instrumentation-botocore==0.49b2",
    "opentelemetry-instrumentation-dbapi==0.49b2",
    "opentelemetry-instrumentation-django==0.49b2",
    "opentelemetry-instrumentation-elasticsearch==0.49b2",
    "opentelemetry-instrumentation-grpc==0.49b2",
    "opentelemetry-instrumentation-logging==0.49b2",
    "opentelemetry-instrumentation-psycopg2==0.49b2",
    "opentelemetry-instrumentation-redis==0.49b2",
    "opentelemetry-instrumentation-requests==0.49b2",
    "opentelemetry-instrumentation-sqlite3==0.49b2",
    "opentelemetry-instrumentation-system-metrics==0.49b2",
    "opentelemetry-instrumentation-threading==0.49b2",
    "opentelemetry-instrumentation-tortoiseorm==0.49b2",
    "opentelemetry-instrumentation-urllib==0.49b2",
    "opentelemetry-instrumentation-urllib3==0.49b2",
    "opentelemetry-instrumentation-wsgi==0.49b2",
    "opentelemetry-propagator-aws-xray==1.0.1",
    "opentelemetry-proto==1.28.2",
    "opentelemetry-sdk==1.28.2",
    "opentelemetry-semantic-conventions==0.49b2",
    "opentelemetry-util-http==0.49b2",
    # The above packages are listed and pinned to avoid using the 'opentelemetry-bootstrap -a install' command
    "xlrd3==1.1.0",
]

[project.optional-dependencies]
dev = [
    "black==24.10.0",
    "click==8.1.7",
    "docker==7.0.0",
    "dredd-hooks==0.2.0",
    "flake8==7.1.0",
    "importlib-metadata==8.5.0",
    "mock==5.1.*",
    "model-bakery==1.17.*",
    "pip==23.2.*",
    "pre-commit==3.6.2",
    "pyspark==3.5.0",
    "pytest==8.0.*",
    "pytest-cov==4.1.*",
    "pytest-django==4.8.*",
    "pytest-pretty==1.2.*",
    "pytest-xdist==3.5.*",
]
server = [
    "django-redis==5.4.*",
    "packaging==22.0",
    "pyparsing==3.2.1",
    "supervisor==4.1.0",
    "uwsgi==2.0.23",
]
ansible = ["ansible==2.9.*"]
awscli = ["awscli==1.34.*"]

[project.urls]
homepage = 'https://www.usaspending.gov/'
documentation = 'https://api.usaspending.gov/'
repository = 'https://github.com/fedspendingtransparency/usaspending-api'

[tool.pytest.ini_options]
DJANGO_SETTINGS_MODULE = "usaspending_api.settings"
addopts = "--cov=usaspending_api"
markers = [
    "signal_handling: Mark all tests that import the signal library and invoke signals. This MUST be done on the main thread, and can cause errors if pytest-xdist subordinates parellel test sessions to background threads.",

    # These are "auto" marked based on fixture usage. See conftest.py pytest_collection_modifyitems
    "spark: Mark all tests using the spark fixture. Can be selected with -m spark or deselected with -m (not spark)",
    "database: Mark all integration tests using a database. Can be selected with -m database or deselected with -m (not database)",
    "elasticsearch: Mark all integration tests using Elasticsearch. Can be selected with -m database or deselected with -m (not elasticsearch)",
]
pythonpath = [
  "."
]

[tool.coverage.run]
omit = [
    # tests themselves don't need coverage measurements
    "*/tests/*",
    # nor db migration scripts
    "*/migrations/*",
]

[tool.coverage.report]
# Regexes for lines to exclude from consideration
exclude_lines = [
    # Have to re-enable the standard pragma
    "pragma: no cover"
]

[tool.black]
line-length = 120
target-version = ['py310']
exclude = '/(\.git|\.venv|venv|migrations)/'
